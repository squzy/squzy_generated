// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/server.proto

package squzy_server_v1_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_RUNNED  Status = 0
	Status_STOPPED Status = 1
)

var Status_name = map[int32]string{
	0: "RUNNED",
	1: "STOPPED",
}

var Status_value = map[string]int32{
	"RUNNED":  0,
	"STOPPED": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{0}
}

type SchedulerListItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=squzy.server.v1.service.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchedulerListItem) Reset()         { *m = SchedulerListItem{} }
func (m *SchedulerListItem) String() string { return proto.CompactTextString(m) }
func (*SchedulerListItem) ProtoMessage()    {}
func (*SchedulerListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{0}
}

func (m *SchedulerListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulerListItem.Unmarshal(m, b)
}
func (m *SchedulerListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulerListItem.Marshal(b, m, deterministic)
}
func (m *SchedulerListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulerListItem.Merge(m, src)
}
func (m *SchedulerListItem) XXX_Size() int {
	return xxx_messageInfo_SchedulerListItem.Size(m)
}
func (m *SchedulerListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulerListItem.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulerListItem proto.InternalMessageInfo

func (m *SchedulerListItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SchedulerListItem) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_RUNNED
}

type GetListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListRequest) Reset()         { *m = GetListRequest{} }
func (m *GetListRequest) String() string { return proto.CompactTextString(m) }
func (*GetListRequest) ProtoMessage()    {}
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{1}
}

func (m *GetListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListRequest.Unmarshal(m, b)
}
func (m *GetListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListRequest.Marshal(b, m, deterministic)
}
func (m *GetListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListRequest.Merge(m, src)
}
func (m *GetListRequest) XXX_Size() int {
	return xxx_messageInfo_GetListRequest.Size(m)
}
func (m *GetListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetListRequest proto.InternalMessageInfo

type GetListResponse struct {
	List                 []*SchedulerListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetListResponse) Reset()         { *m = GetListResponse{} }
func (m *GetListResponse) String() string { return proto.CompactTextString(m) }
func (*GetListResponse) ProtoMessage()    {}
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{2}
}

func (m *GetListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListResponse.Unmarshal(m, b)
}
func (m *GetListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListResponse.Marshal(b, m, deterministic)
}
func (m *GetListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListResponse.Merge(m, src)
}
func (m *GetListResponse) XXX_Size() int {
	return xxx_messageInfo_GetListResponse.Size(m)
}
func (m *GetListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetListResponse proto.InternalMessageInfo

func (m *GetListResponse) GetList() []*SchedulerListItem {
	if m != nil {
		return m.List
	}
	return nil
}

type SiteMapCheck struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteMapCheck) Reset()         { *m = SiteMapCheck{} }
func (m *SiteMapCheck) String() string { return proto.CompactTextString(m) }
func (*SiteMapCheck) ProtoMessage()    {}
func (*SiteMapCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{3}
}

func (m *SiteMapCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteMapCheck.Unmarshal(m, b)
}
func (m *SiteMapCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteMapCheck.Marshal(b, m, deterministic)
}
func (m *SiteMapCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteMapCheck.Merge(m, src)
}
func (m *SiteMapCheck) XXX_Size() int {
	return xxx_messageInfo_SiteMapCheck.Size(m)
}
func (m *SiteMapCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteMapCheck.DiscardUnknown(m)
}

var xxx_messageInfo_SiteMapCheck proto.InternalMessageInfo

func (m *SiteMapCheck) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type TcpCheck struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpCheck) Reset()         { *m = TcpCheck{} }
func (m *TcpCheck) String() string { return proto.CompactTextString(m) }
func (*TcpCheck) ProtoMessage()    {}
func (*TcpCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{4}
}

func (m *TcpCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpCheck.Unmarshal(m, b)
}
func (m *TcpCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpCheck.Marshal(b, m, deterministic)
}
func (m *TcpCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpCheck.Merge(m, src)
}
func (m *TcpCheck) XXX_Size() int {
	return xxx_messageInfo_TcpCheck.Size(m)
}
func (m *TcpCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpCheck.DiscardUnknown(m)
}

var xxx_messageInfo_TcpCheck proto.InternalMessageInfo

func (m *TcpCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TcpCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type GrpcCheck struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcCheck) Reset()         { *m = GrpcCheck{} }
func (m *GrpcCheck) String() string { return proto.CompactTextString(m) }
func (*GrpcCheck) ProtoMessage()    {}
func (*GrpcCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{5}
}

func (m *GrpcCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcCheck.Unmarshal(m, b)
}
func (m *GrpcCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcCheck.Marshal(b, m, deterministic)
}
func (m *GrpcCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcCheck.Merge(m, src)
}
func (m *GrpcCheck) XXX_Size() int {
	return xxx_messageInfo_GrpcCheck.Size(m)
}
func (m *GrpcCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcCheck.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcCheck proto.InternalMessageInfo

func (m *GrpcCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GrpcCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type AddSchedulerRequest struct {
	Interval int32 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// Types that are valid to be assigned to Check:
	//	*AddSchedulerRequest_TcpCheck
	//	*AddSchedulerRequest_SitemapCheck
	//	*AddSchedulerRequest_GrpcCheck
	Check                isAddSchedulerRequest_Check `protobuf_oneof:"check"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AddSchedulerRequest) Reset()         { *m = AddSchedulerRequest{} }
func (m *AddSchedulerRequest) String() string { return proto.CompactTextString(m) }
func (*AddSchedulerRequest) ProtoMessage()    {}
func (*AddSchedulerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{6}
}

func (m *AddSchedulerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSchedulerRequest.Unmarshal(m, b)
}
func (m *AddSchedulerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSchedulerRequest.Marshal(b, m, deterministic)
}
func (m *AddSchedulerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSchedulerRequest.Merge(m, src)
}
func (m *AddSchedulerRequest) XXX_Size() int {
	return xxx_messageInfo_AddSchedulerRequest.Size(m)
}
func (m *AddSchedulerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSchedulerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSchedulerRequest proto.InternalMessageInfo

func (m *AddSchedulerRequest) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type isAddSchedulerRequest_Check interface {
	isAddSchedulerRequest_Check()
}

type AddSchedulerRequest_TcpCheck struct {
	TcpCheck *TcpCheck `protobuf:"bytes,2,opt,name=tcp_check,json=tcpCheck,proto3,oneof"`
}

type AddSchedulerRequest_SitemapCheck struct {
	SitemapCheck *SiteMapCheck `protobuf:"bytes,3,opt,name=sitemap_check,json=sitemapCheck,proto3,oneof"`
}

type AddSchedulerRequest_GrpcCheck struct {
	GrpcCheck *GrpcCheck `protobuf:"bytes,4,opt,name=grpc_check,json=grpcCheck,proto3,oneof"`
}

func (*AddSchedulerRequest_TcpCheck) isAddSchedulerRequest_Check() {}

func (*AddSchedulerRequest_SitemapCheck) isAddSchedulerRequest_Check() {}

func (*AddSchedulerRequest_GrpcCheck) isAddSchedulerRequest_Check() {}

func (m *AddSchedulerRequest) GetCheck() isAddSchedulerRequest_Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *AddSchedulerRequest) GetTcpCheck() *TcpCheck {
	if x, ok := m.GetCheck().(*AddSchedulerRequest_TcpCheck); ok {
		return x.TcpCheck
	}
	return nil
}

func (m *AddSchedulerRequest) GetSitemapCheck() *SiteMapCheck {
	if x, ok := m.GetCheck().(*AddSchedulerRequest_SitemapCheck); ok {
		return x.SitemapCheck
	}
	return nil
}

func (m *AddSchedulerRequest) GetGrpcCheck() *GrpcCheck {
	if x, ok := m.GetCheck().(*AddSchedulerRequest_GrpcCheck); ok {
		return x.GrpcCheck
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddSchedulerRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddSchedulerRequest_TcpCheck)(nil),
		(*AddSchedulerRequest_SitemapCheck)(nil),
		(*AddSchedulerRequest_GrpcCheck)(nil),
	}
}

type AddSchedulerResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSchedulerResponse) Reset()         { *m = AddSchedulerResponse{} }
func (m *AddSchedulerResponse) String() string { return proto.CompactTextString(m) }
func (*AddSchedulerResponse) ProtoMessage()    {}
func (*AddSchedulerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{7}
}

func (m *AddSchedulerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSchedulerResponse.Unmarshal(m, b)
}
func (m *AddSchedulerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSchedulerResponse.Marshal(b, m, deterministic)
}
func (m *AddSchedulerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSchedulerResponse.Merge(m, src)
}
func (m *AddSchedulerResponse) XXX_Size() int {
	return xxx_messageInfo_AddSchedulerResponse.Size(m)
}
func (m *AddSchedulerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSchedulerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSchedulerResponse proto.InternalMessageInfo

func (m *AddSchedulerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveSchedulerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSchedulerRequest) Reset()         { *m = RemoveSchedulerRequest{} }
func (m *RemoveSchedulerRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveSchedulerRequest) ProtoMessage()    {}
func (*RemoveSchedulerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{8}
}

func (m *RemoveSchedulerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSchedulerRequest.Unmarshal(m, b)
}
func (m *RemoveSchedulerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSchedulerRequest.Marshal(b, m, deterministic)
}
func (m *RemoveSchedulerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSchedulerRequest.Merge(m, src)
}
func (m *RemoveSchedulerRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveSchedulerRequest.Size(m)
}
func (m *RemoveSchedulerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSchedulerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSchedulerRequest proto.InternalMessageInfo

func (m *RemoveSchedulerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveSchedulerResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSchedulerResponse) Reset()         { *m = RemoveSchedulerResponse{} }
func (m *RemoveSchedulerResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveSchedulerResponse) ProtoMessage()    {}
func (*RemoveSchedulerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{9}
}

func (m *RemoveSchedulerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSchedulerResponse.Unmarshal(m, b)
}
func (m *RemoveSchedulerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSchedulerResponse.Marshal(b, m, deterministic)
}
func (m *RemoveSchedulerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSchedulerResponse.Merge(m, src)
}
func (m *RemoveSchedulerResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveSchedulerResponse.Size(m)
}
func (m *RemoveSchedulerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSchedulerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSchedulerResponse proto.InternalMessageInfo

func (m *RemoveSchedulerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunSchedulerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunSchedulerRequest) Reset()         { *m = RunSchedulerRequest{} }
func (m *RunSchedulerRequest) String() string { return proto.CompactTextString(m) }
func (*RunSchedulerRequest) ProtoMessage()    {}
func (*RunSchedulerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{10}
}

func (m *RunSchedulerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunSchedulerRequest.Unmarshal(m, b)
}
func (m *RunSchedulerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunSchedulerRequest.Marshal(b, m, deterministic)
}
func (m *RunSchedulerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunSchedulerRequest.Merge(m, src)
}
func (m *RunSchedulerRequest) XXX_Size() int {
	return xxx_messageInfo_RunSchedulerRequest.Size(m)
}
func (m *RunSchedulerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunSchedulerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunSchedulerRequest proto.InternalMessageInfo

func (m *RunSchedulerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopSchedulerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSchedulerRequest) Reset()         { *m = StopSchedulerRequest{} }
func (m *StopSchedulerRequest) String() string { return proto.CompactTextString(m) }
func (*StopSchedulerRequest) ProtoMessage()    {}
func (*StopSchedulerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{11}
}

func (m *StopSchedulerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSchedulerRequest.Unmarshal(m, b)
}
func (m *StopSchedulerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSchedulerRequest.Marshal(b, m, deterministic)
}
func (m *StopSchedulerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSchedulerRequest.Merge(m, src)
}
func (m *StopSchedulerRequest) XXX_Size() int {
	return xxx_messageInfo_StopSchedulerRequest.Size(m)
}
func (m *StopSchedulerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSchedulerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopSchedulerRequest proto.InternalMessageInfo

func (m *StopSchedulerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunSchedulerResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunSchedulerResponse) Reset()         { *m = RunSchedulerResponse{} }
func (m *RunSchedulerResponse) String() string { return proto.CompactTextString(m) }
func (*RunSchedulerResponse) ProtoMessage()    {}
func (*RunSchedulerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{12}
}

func (m *RunSchedulerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunSchedulerResponse.Unmarshal(m, b)
}
func (m *RunSchedulerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunSchedulerResponse.Marshal(b, m, deterministic)
}
func (m *RunSchedulerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunSchedulerResponse.Merge(m, src)
}
func (m *RunSchedulerResponse) XXX_Size() int {
	return xxx_messageInfo_RunSchedulerResponse.Size(m)
}
func (m *RunSchedulerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunSchedulerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunSchedulerResponse proto.InternalMessageInfo

func (m *RunSchedulerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopSchedulerResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSchedulerResponse) Reset()         { *m = StopSchedulerResponse{} }
func (m *StopSchedulerResponse) String() string { return proto.CompactTextString(m) }
func (*StopSchedulerResponse) ProtoMessage()    {}
func (*StopSchedulerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c2b3ce2e73d961, []int{13}
}

func (m *StopSchedulerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSchedulerResponse.Unmarshal(m, b)
}
func (m *StopSchedulerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSchedulerResponse.Marshal(b, m, deterministic)
}
func (m *StopSchedulerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSchedulerResponse.Merge(m, src)
}
func (m *StopSchedulerResponse) XXX_Size() int {
	return xxx_messageInfo_StopSchedulerResponse.Size(m)
}
func (m *StopSchedulerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSchedulerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopSchedulerResponse proto.InternalMessageInfo

func (m *StopSchedulerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("squzy.server.v1.service.Status", Status_name, Status_value)
	proto.RegisterType((*SchedulerListItem)(nil), "squzy.server.v1.service.SchedulerListItem")
	proto.RegisterType((*GetListRequest)(nil), "squzy.server.v1.service.GetListRequest")
	proto.RegisterType((*GetListResponse)(nil), "squzy.server.v1.service.GetListResponse")
	proto.RegisterType((*SiteMapCheck)(nil), "squzy.server.v1.service.SiteMapCheck")
	proto.RegisterType((*TcpCheck)(nil), "squzy.server.v1.service.TcpCheck")
	proto.RegisterType((*GrpcCheck)(nil), "squzy.server.v1.service.GrpcCheck")
	proto.RegisterType((*AddSchedulerRequest)(nil), "squzy.server.v1.service.AddSchedulerRequest")
	proto.RegisterType((*AddSchedulerResponse)(nil), "squzy.server.v1.service.AddSchedulerResponse")
	proto.RegisterType((*RemoveSchedulerRequest)(nil), "squzy.server.v1.service.RemoveSchedulerRequest")
	proto.RegisterType((*RemoveSchedulerResponse)(nil), "squzy.server.v1.service.RemoveSchedulerResponse")
	proto.RegisterType((*RunSchedulerRequest)(nil), "squzy.server.v1.service.RunSchedulerRequest")
	proto.RegisterType((*StopSchedulerRequest)(nil), "squzy.server.v1.service.StopSchedulerRequest")
	proto.RegisterType((*RunSchedulerResponse)(nil), "squzy.server.v1.service.RunSchedulerResponse")
	proto.RegisterType((*StopSchedulerResponse)(nil), "squzy.server.v1.service.StopSchedulerResponse")
}

func init() { proto.RegisterFile("proto/v1/server.proto", fileDescriptor_84c2b3ce2e73d961) }

var fileDescriptor_84c2b3ce2e73d961 = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xdd, 0x4e, 0xdb, 0x30,
	0x14, 0xc7, 0xfb, 0x99, 0xb6, 0xa7, 0xa5, 0x74, 0x06, 0x46, 0x95, 0x9b, 0x95, 0x48, 0x40, 0x86,
	0x46, 0x3a, 0xc2, 0xc5, 0xee, 0xa6, 0x6d, 0x80, 0xe8, 0x24, 0xc6, 0x98, 0xc3, 0xee, 0x90, 0xa6,
	0x2e, 0xb1, 0x68, 0x44, 0xdb, 0x04, 0xdb, 0x89, 0xb4, 0xbd, 0xc4, 0xde, 0x62, 0xcf, 0x39, 0xc5,
	0x75, 0xbb, 0x36, 0x8d, 0x4b, 0xb9, 0x3b, 0x76, 0xfe, 0xe7, 0x77, 0x3e, 0x1d, 0xd8, 0x09, 0x69,
	0xc0, 0x83, 0x6e, 0x7c, 0xd2, 0x65, 0x84, 0xc6, 0x84, 0x5a, 0xe2, 0x8c, 0x76, 0xd9, 0x63, 0xf4,
	0xfb, 0x97, 0x25, 0xef, 0xe2, 0x13, 0x61, 0xf9, 0x2e, 0x31, 0xee, 0xe0, 0x85, 0xe3, 0x0e, 0x88,
	0x17, 0x0d, 0x09, 0xbd, 0xf2, 0x19, 0xff, 0xcc, 0xc9, 0x08, 0x35, 0xa1, 0xe0, 0x7b, 0xed, 0x7c,
	0x27, 0x6f, 0xd6, 0x70, 0xc1, 0xf7, 0xd0, 0x3b, 0xd0, 0x18, 0xef, 0xf3, 0x88, 0xb5, 0x0b, 0x9d,
	0xbc, 0xd9, 0xb4, 0x5f, 0x59, 0x0a, 0x9c, 0xe5, 0x08, 0x19, 0x96, 0x72, 0xa3, 0x05, 0xcd, 0x4b,
	0xc2, 0x13, 0x2e, 0x26, 0x8f, 0x11, 0x61, 0xdc, 0xf8, 0x06, 0x9b, 0xb3, 0x1b, 0x16, 0x06, 0x63,
	0x46, 0xd0, 0x7b, 0x28, 0x0d, 0x7d, 0xc6, 0xdb, 0xf9, 0x4e, 0xd1, 0xac, 0xdb, 0x47, 0x6a, 0x76,
	0x3a, 0x4f, 0x2c, 0xfc, 0x8c, 0x0e, 0x34, 0x1c, 0x9f, 0x93, 0x2f, 0xfd, 0xf0, 0x6c, 0x40, 0xdc,
	0x07, 0xd4, 0x82, 0x62, 0x44, 0x87, 0x32, 0xfd, 0xc4, 0x34, 0x6c, 0xa8, 0xde, 0xba, 0xf2, 0x2b,
	0x82, 0xd2, 0x20, 0x10, 0xd1, 0x92, 0xcf, 0xc2, 0x4e, 0xee, 0xc2, 0x80, 0x72, 0x51, 0x5d, 0x19,
	0x0b, 0xdb, 0x38, 0x85, 0xda, 0x25, 0x0d, 0xdd, 0xe7, 0x39, 0xfd, 0x29, 0xc0, 0xd6, 0x47, 0xcf,
	0x9b, 0x65, 0x2a, 0xab, 0x46, 0x3a, 0x54, 0xfd, 0x31, 0x27, 0x34, 0xee, 0x4f, 0xf2, 0x2a, 0xe3,
	0xd9, 0x19, 0x7d, 0x80, 0x1a, 0x77, 0xc3, 0x1f, 0x6e, 0x12, 0x48, 0xc0, 0xea, 0xf6, 0x9e, 0xb2,
	0x07, 0xd3, 0x32, 0x7a, 0x39, 0x5c, 0xe5, 0xd3, 0x92, 0xae, 0x60, 0x83, 0xf9, 0x9c, 0x8c, 0xfa,
	0x53, 0x4a, 0x51, 0x50, 0xf6, 0xd5, 0x9d, 0x9c, 0x6b, 0x57, 0x2f, 0x87, 0x1b, 0xd2, 0x7b, 0x42,
	0x3b, 0x03, 0xb8, 0xa7, 0xa1, 0x2b, 0x51, 0x25, 0x81, 0x32, 0x94, 0xa8, 0x59, 0x8f, 0x7a, 0x39,
	0x5c, 0xbb, 0x9f, 0x1e, 0x3e, 0x55, 0xa0, 0x2c, 0xfc, 0x8d, 0x03, 0xd8, 0x5e, 0x6c, 0x88, 0x1c,
	0x7a, 0x6a, 0xc5, 0x0c, 0x13, 0x5e, 0x62, 0x32, 0x0a, 0x62, 0xb2, 0xd4, 0xbb, 0xb4, 0xf2, 0x35,
	0xec, 0x2e, 0x29, 0x15, 0xd0, 0x7d, 0xd8, 0xc2, 0xd1, 0xf8, 0x49, 0xe2, 0x01, 0x6c, 0x3b, 0x3c,
	0x08, 0xd7, 0xd1, 0x2d, 0xe2, 0x14, 0x61, 0x0f, 0x61, 0x27, 0xc5, 0xcb, 0x16, 0x1e, 0xed, 0x81,
	0x36, 0x79, 0x30, 0x08, 0x40, 0xc3, 0xdf, 0xaf, 0xaf, 0x2f, 0xce, 0x5b, 0x39, 0x54, 0x87, 0x8a,
	0x73, 0xfb, 0xf5, 0xe6, 0xe6, 0xe2, 0xbc, 0x95, 0xb7, 0xff, 0x96, 0x40, 0x73, 0x44, 0xd7, 0xd1,
	0x1d, 0x54, 0xe4, 0xd3, 0x41, 0x87, 0xea, 0x79, 0x2c, 0x3c, 0x37, 0xdd, 0x7c, 0x5a, 0x28, 0x73,
	0x7b, 0x80, 0xc6, 0xfc, 0xa0, 0xd0, 0x1b, 0xa5, 0x67, 0xc6, 0x82, 0xeb, 0xc7, 0x6b, 0xaa, 0x65,
	0x30, 0x0e, 0x9b, 0xa9, 0x19, 0xa2, 0xae, 0x92, 0x90, 0xbd, 0x17, 0xfa, 0xdb, 0xf5, 0x1d, 0xfe,
	0x97, 0x38, 0x3f, 0xbf, 0x15, 0x25, 0x66, 0x6c, 0xcd, 0x8a, 0x12, 0x33, 0x97, 0x62, 0x0c, 0x1b,
	0x0b, 0x4b, 0x80, 0x8e, 0x57, 0xfc, 0x34, 0x97, 0x97, 0x4f, 0xb7, 0xd6, 0x95, 0x4f, 0xe2, 0xfd,
	0xd4, 0xc4, 0x8f, 0xfe, 0xf4, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x74, 0x54, 0x91, 0x01,
	0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error)
	AddScheduler(ctx context.Context, in *AddSchedulerRequest, opts ...grpc.CallOption) (*AddSchedulerResponse, error)
	RemoveScheduler(ctx context.Context, in *RemoveSchedulerRequest, opts ...grpc.CallOption) (*RemoveSchedulerResponse, error)
	RunScheduler(ctx context.Context, in *RunSchedulerRequest, opts ...grpc.CallOption) (*RunSchedulerResponse, error)
	StopScheduler(ctx context.Context, in *StopSchedulerRequest, opts ...grpc.CallOption) (*StopSchedulerResponse, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error) {
	out := new(GetListResponse)
	err := c.cc.Invoke(ctx, "/squzy.server.v1.service.Server/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) AddScheduler(ctx context.Context, in *AddSchedulerRequest, opts ...grpc.CallOption) (*AddSchedulerResponse, error) {
	out := new(AddSchedulerResponse)
	err := c.cc.Invoke(ctx, "/squzy.server.v1.service.Server/AddScheduler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) RemoveScheduler(ctx context.Context, in *RemoveSchedulerRequest, opts ...grpc.CallOption) (*RemoveSchedulerResponse, error) {
	out := new(RemoveSchedulerResponse)
	err := c.cc.Invoke(ctx, "/squzy.server.v1.service.Server/RemoveScheduler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) RunScheduler(ctx context.Context, in *RunSchedulerRequest, opts ...grpc.CallOption) (*RunSchedulerResponse, error) {
	out := new(RunSchedulerResponse)
	err := c.cc.Invoke(ctx, "/squzy.server.v1.service.Server/RunScheduler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) StopScheduler(ctx context.Context, in *StopSchedulerRequest, opts ...grpc.CallOption) (*StopSchedulerResponse, error) {
	out := new(StopSchedulerResponse)
	err := c.cc.Invoke(ctx, "/squzy.server.v1.service.Server/StopScheduler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	GetList(context.Context, *GetListRequest) (*GetListResponse, error)
	AddScheduler(context.Context, *AddSchedulerRequest) (*AddSchedulerResponse, error)
	RemoveScheduler(context.Context, *RemoveSchedulerRequest) (*RemoveSchedulerResponse, error)
	RunScheduler(context.Context, *RunSchedulerRequest) (*RunSchedulerResponse, error)
	StopScheduler(context.Context, *StopSchedulerRequest) (*StopSchedulerResponse, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) GetList(ctx context.Context, req *GetListRequest) (*GetListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedServerServer) AddScheduler(ctx context.Context, req *AddSchedulerRequest) (*AddSchedulerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddScheduler not implemented")
}
func (*UnimplementedServerServer) RemoveScheduler(ctx context.Context, req *RemoveSchedulerRequest) (*RemoveSchedulerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveScheduler not implemented")
}
func (*UnimplementedServerServer) RunScheduler(ctx context.Context, req *RunSchedulerRequest) (*RunSchedulerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunScheduler not implemented")
}
func (*UnimplementedServerServer) StopScheduler(ctx context.Context, req *StopSchedulerRequest) (*StopSchedulerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopScheduler not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.server.v1.service.Server/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).GetList(ctx, req.(*GetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_AddScheduler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSchedulerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).AddScheduler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.server.v1.service.Server/AddScheduler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).AddScheduler(ctx, req.(*AddSchedulerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_RemoveScheduler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSchedulerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).RemoveScheduler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.server.v1.service.Server/RemoveScheduler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).RemoveScheduler(ctx, req.(*RemoveSchedulerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_RunScheduler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunSchedulerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).RunScheduler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.server.v1.service.Server/RunScheduler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).RunScheduler(ctx, req.(*RunSchedulerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_StopScheduler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopSchedulerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).StopScheduler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.server.v1.service.Server/StopScheduler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).StopScheduler(ctx, req.(*StopSchedulerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "squzy.server.v1.service.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _Server_GetList_Handler,
		},
		{
			MethodName: "AddScheduler",
			Handler:    _Server_AddScheduler_Handler,
		},
		{
			MethodName: "RemoveScheduler",
			Handler:    _Server_RemoveScheduler_Handler,
		},
		{
			MethodName: "RunScheduler",
			Handler:    _Server_RunScheduler_Handler,
		},
		{
			MethodName: "StopScheduler",
			Handler:    _Server_StopScheduler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/server.proto",
}
