// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/squzy_monitoring.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SchedulerStatus int32

const (
	SchedulerStatus_RUNNED  SchedulerStatus = 0
	SchedulerStatus_STOPPED SchedulerStatus = 1
	SchedulerStatus_REMOVED SchedulerStatus = 3
)

var SchedulerStatus_name = map[int32]string{
	0: "RUNNED",
	1: "STOPPED",
	3: "REMOVED",
}

var SchedulerStatus_value = map[string]int32{
	"RUNNED":  0,
	"STOPPED": 1,
	"REMOVED": 3,
}

func (x SchedulerStatus) String() string {
	return proto.EnumName(SchedulerStatus_name, int32(x))
}

func (SchedulerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{0}
}

type SchedulerType int32

const (
	SchedulerType_Tcp           SchedulerType = 0
	SchedulerType_Grpc          SchedulerType = 1
	SchedulerType_Http          SchedulerType = 2
	SchedulerType_SiteMap       SchedulerType = 3
	SchedulerType_HttpJsonValue SchedulerType = 4
)

var SchedulerType_name = map[int32]string{
	0: "Tcp",
	1: "Grpc",
	2: "Http",
	3: "SiteMap",
	4: "HttpJsonValue",
}

var SchedulerType_value = map[string]int32{
	"Tcp":           0,
	"Grpc":          1,
	"Http":          2,
	"SiteMap":       3,
	"HttpJsonValue": 4,
}

func (x SchedulerType) String() string {
	return proto.EnumName(SchedulerType_name, int32(x))
}

func (SchedulerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{1}
}

type HttpJsonValueConfig_JsonValueParseType int32

const (
	HttpJsonValueConfig_String HttpJsonValueConfig_JsonValueParseType = 0
	HttpJsonValueConfig_Bool   HttpJsonValueConfig_JsonValueParseType = 1
	HttpJsonValueConfig_Number HttpJsonValueConfig_JsonValueParseType = 2
	HttpJsonValueConfig_Time   HttpJsonValueConfig_JsonValueParseType = 3
	HttpJsonValueConfig_Any    HttpJsonValueConfig_JsonValueParseType = 4
	HttpJsonValueConfig_Raw    HttpJsonValueConfig_JsonValueParseType = 5
)

var HttpJsonValueConfig_JsonValueParseType_name = map[int32]string{
	0: "String",
	1: "Bool",
	2: "Number",
	3: "Time",
	4: "Any",
	5: "Raw",
}

var HttpJsonValueConfig_JsonValueParseType_value = map[string]int32{
	"String": 0,
	"Bool":   1,
	"Number": 2,
	"Time":   3,
	"Any":    4,
	"Raw":    5,
}

func (x HttpJsonValueConfig_JsonValueParseType) String() string {
	return proto.EnumName(HttpJsonValueConfig_JsonValueParseType_name, int32(x))
}

func (HttpJsonValueConfig_JsonValueParseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{8, 0}
}

type GetSchedulerByIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSchedulerByIdRequest) Reset()         { *m = GetSchedulerByIdRequest{} }
func (m *GetSchedulerByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetSchedulerByIdRequest) ProtoMessage()    {}
func (*GetSchedulerByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{0}
}

func (m *GetSchedulerByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchedulerByIdRequest.Unmarshal(m, b)
}
func (m *GetSchedulerByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchedulerByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetSchedulerByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchedulerByIdRequest.Merge(m, src)
}
func (m *GetSchedulerByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetSchedulerByIdRequest.Size(m)
}
func (m *GetSchedulerByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchedulerByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchedulerByIdRequest proto.InternalMessageInfo

func (m *GetSchedulerByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Scheduler struct {
	Id     string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   SchedulerType   `protobuf:"varint,2,opt,name=type,proto3,enum=squzy.v1.monitoring.SchedulerType" json:"type,omitempty"`
	Status SchedulerStatus `protobuf:"varint,3,opt,name=status,proto3,enum=squzy.v1.monitoring.SchedulerStatus" json:"status,omitempty"`
	// Types that are valid to be assigned to Config:
	//	*Scheduler_Tcp
	//	*Scheduler_Sitemap
	//	*Scheduler_Grpc
	//	*Scheduler_Http
	//	*Scheduler_HttpValue
	Config               isScheduler_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Scheduler) Reset()         { *m = Scheduler{} }
func (m *Scheduler) String() string { return proto.CompactTextString(m) }
func (*Scheduler) ProtoMessage()    {}
func (*Scheduler) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{1}
}

func (m *Scheduler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scheduler.Unmarshal(m, b)
}
func (m *Scheduler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scheduler.Marshal(b, m, deterministic)
}
func (m *Scheduler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler.Merge(m, src)
}
func (m *Scheduler) XXX_Size() int {
	return xxx_messageInfo_Scheduler.Size(m)
}
func (m *Scheduler) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler proto.InternalMessageInfo

func (m *Scheduler) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Scheduler) GetType() SchedulerType {
	if m != nil {
		return m.Type
	}
	return SchedulerType_Tcp
}

func (m *Scheduler) GetStatus() SchedulerStatus {
	if m != nil {
		return m.Status
	}
	return SchedulerStatus_RUNNED
}

type isScheduler_Config interface {
	isScheduler_Config()
}

type Scheduler_Tcp struct {
	Tcp *TcpConfig `protobuf:"bytes,4,opt,name=tcp,proto3,oneof"`
}

type Scheduler_Sitemap struct {
	Sitemap *SiteMapConfig `protobuf:"bytes,5,opt,name=sitemap,proto3,oneof"`
}

type Scheduler_Grpc struct {
	Grpc *GrpcConfig `protobuf:"bytes,6,opt,name=grpc,proto3,oneof"`
}

type Scheduler_Http struct {
	Http *HttpConfig `protobuf:"bytes,7,opt,name=http,proto3,oneof"`
}

type Scheduler_HttpValue struct {
	HttpValue *HttpJsonValueConfig `protobuf:"bytes,8,opt,name=httpValue,proto3,oneof"`
}

func (*Scheduler_Tcp) isScheduler_Config() {}

func (*Scheduler_Sitemap) isScheduler_Config() {}

func (*Scheduler_Grpc) isScheduler_Config() {}

func (*Scheduler_Http) isScheduler_Config() {}

func (*Scheduler_HttpValue) isScheduler_Config() {}

func (m *Scheduler) GetConfig() isScheduler_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Scheduler) GetTcp() *TcpConfig {
	if x, ok := m.GetConfig().(*Scheduler_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (m *Scheduler) GetSitemap() *SiteMapConfig {
	if x, ok := m.GetConfig().(*Scheduler_Sitemap); ok {
		return x.Sitemap
	}
	return nil
}

func (m *Scheduler) GetGrpc() *GrpcConfig {
	if x, ok := m.GetConfig().(*Scheduler_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (m *Scheduler) GetHttp() *HttpConfig {
	if x, ok := m.GetConfig().(*Scheduler_Http); ok {
		return x.Http
	}
	return nil
}

func (m *Scheduler) GetHttpValue() *HttpJsonValueConfig {
	if x, ok := m.GetConfig().(*Scheduler_HttpValue); ok {
		return x.HttpValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Scheduler) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Scheduler_Tcp)(nil),
		(*Scheduler_Sitemap)(nil),
		(*Scheduler_Grpc)(nil),
		(*Scheduler_Http)(nil),
		(*Scheduler_HttpValue)(nil),
	}
}

type GetSchedulerListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSchedulerListRequest) Reset()         { *m = GetSchedulerListRequest{} }
func (m *GetSchedulerListRequest) String() string { return proto.CompactTextString(m) }
func (*GetSchedulerListRequest) ProtoMessage()    {}
func (*GetSchedulerListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{2}
}

func (m *GetSchedulerListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchedulerListRequest.Unmarshal(m, b)
}
func (m *GetSchedulerListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchedulerListRequest.Marshal(b, m, deterministic)
}
func (m *GetSchedulerListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchedulerListRequest.Merge(m, src)
}
func (m *GetSchedulerListRequest) XXX_Size() int {
	return xxx_messageInfo_GetSchedulerListRequest.Size(m)
}
func (m *GetSchedulerListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchedulerListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchedulerListRequest proto.InternalMessageInfo

type GetSchedulerListResponse struct {
	List                 []*Scheduler `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetSchedulerListResponse) Reset()         { *m = GetSchedulerListResponse{} }
func (m *GetSchedulerListResponse) String() string { return proto.CompactTextString(m) }
func (*GetSchedulerListResponse) ProtoMessage()    {}
func (*GetSchedulerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{3}
}

func (m *GetSchedulerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchedulerListResponse.Unmarshal(m, b)
}
func (m *GetSchedulerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchedulerListResponse.Marshal(b, m, deterministic)
}
func (m *GetSchedulerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchedulerListResponse.Merge(m, src)
}
func (m *GetSchedulerListResponse) XXX_Size() int {
	return xxx_messageInfo_GetSchedulerListResponse.Size(m)
}
func (m *GetSchedulerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchedulerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchedulerListResponse proto.InternalMessageInfo

func (m *GetSchedulerListResponse) GetList() []*Scheduler {
	if m != nil {
		return m.List
	}
	return nil
}

type SiteMapConfig struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Concurrency          int32    `protobuf:"varint,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteMapConfig) Reset()         { *m = SiteMapConfig{} }
func (m *SiteMapConfig) String() string { return proto.CompactTextString(m) }
func (*SiteMapConfig) ProtoMessage()    {}
func (*SiteMapConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{4}
}

func (m *SiteMapConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteMapConfig.Unmarshal(m, b)
}
func (m *SiteMapConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteMapConfig.Marshal(b, m, deterministic)
}
func (m *SiteMapConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteMapConfig.Merge(m, src)
}
func (m *SiteMapConfig) XXX_Size() int {
	return xxx_messageInfo_SiteMapConfig.Size(m)
}
func (m *SiteMapConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteMapConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SiteMapConfig proto.InternalMessageInfo

func (m *SiteMapConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SiteMapConfig) GetConcurrency() int32 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

type TcpConfig struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpConfig) Reset()         { *m = TcpConfig{} }
func (m *TcpConfig) String() string { return proto.CompactTextString(m) }
func (*TcpConfig) ProtoMessage()    {}
func (*TcpConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{5}
}

func (m *TcpConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpConfig.Unmarshal(m, b)
}
func (m *TcpConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpConfig.Marshal(b, m, deterministic)
}
func (m *TcpConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpConfig.Merge(m, src)
}
func (m *TcpConfig) XXX_Size() int {
	return xxx_messageInfo_TcpConfig.Size(m)
}
func (m *TcpConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TcpConfig proto.InternalMessageInfo

func (m *TcpConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TcpConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type GrpcConfig struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcConfig) Reset()         { *m = GrpcConfig{} }
func (m *GrpcConfig) String() string { return proto.CompactTextString(m) }
func (*GrpcConfig) ProtoMessage()    {}
func (*GrpcConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{6}
}

func (m *GrpcConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcConfig.Unmarshal(m, b)
}
func (m *GrpcConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcConfig.Marshal(b, m, deterministic)
}
func (m *GrpcConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcConfig.Merge(m, src)
}
func (m *GrpcConfig) XXX_Size() int {
	return xxx_messageInfo_GrpcConfig.Size(m)
}
func (m *GrpcConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcConfig proto.InternalMessageInfo

func (m *GrpcConfig) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *GrpcConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GrpcConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type HttpConfig struct {
	Method               string            `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StatusCode           int32             `protobuf:"varint,4,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HttpConfig) Reset()         { *m = HttpConfig{} }
func (m *HttpConfig) String() string { return proto.CompactTextString(m) }
func (*HttpConfig) ProtoMessage()    {}
func (*HttpConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{7}
}

func (m *HttpConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpConfig.Unmarshal(m, b)
}
func (m *HttpConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpConfig.Marshal(b, m, deterministic)
}
func (m *HttpConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpConfig.Merge(m, src)
}
func (m *HttpConfig) XXX_Size() int {
	return xxx_messageInfo_HttpConfig.Size(m)
}
func (m *HttpConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpConfig proto.InternalMessageInfo

func (m *HttpConfig) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpConfig) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HttpConfig) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

type HttpJsonValueConfig struct {
	Method               string                           `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                           `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]string                `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Selectors            []*HttpJsonValueConfig_Selectors `protobuf:"bytes,4,rep,name=selectors,proto3" json:"selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *HttpJsonValueConfig) Reset()         { *m = HttpJsonValueConfig{} }
func (m *HttpJsonValueConfig) String() string { return proto.CompactTextString(m) }
func (*HttpJsonValueConfig) ProtoMessage()    {}
func (*HttpJsonValueConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{8}
}

func (m *HttpJsonValueConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpJsonValueConfig.Unmarshal(m, b)
}
func (m *HttpJsonValueConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpJsonValueConfig.Marshal(b, m, deterministic)
}
func (m *HttpJsonValueConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpJsonValueConfig.Merge(m, src)
}
func (m *HttpJsonValueConfig) XXX_Size() int {
	return xxx_messageInfo_HttpJsonValueConfig.Size(m)
}
func (m *HttpJsonValueConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpJsonValueConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpJsonValueConfig proto.InternalMessageInfo

func (m *HttpJsonValueConfig) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpJsonValueConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpJsonValueConfig) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HttpJsonValueConfig) GetSelectors() []*HttpJsonValueConfig_Selectors {
	if m != nil {
		return m.Selectors
	}
	return nil
}

type HttpJsonValueConfig_Selectors struct {
	Type                 HttpJsonValueConfig_JsonValueParseType `protobuf:"varint,1,opt,name=type,proto3,enum=squzy.v1.monitoring.HttpJsonValueConfig_JsonValueParseType" json:"type,omitempty"`
	Path                 string                                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *HttpJsonValueConfig_Selectors) Reset()         { *m = HttpJsonValueConfig_Selectors{} }
func (m *HttpJsonValueConfig_Selectors) String() string { return proto.CompactTextString(m) }
func (*HttpJsonValueConfig_Selectors) ProtoMessage()    {}
func (*HttpJsonValueConfig_Selectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{8, 1}
}

func (m *HttpJsonValueConfig_Selectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpJsonValueConfig_Selectors.Unmarshal(m, b)
}
func (m *HttpJsonValueConfig_Selectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpJsonValueConfig_Selectors.Marshal(b, m, deterministic)
}
func (m *HttpJsonValueConfig_Selectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpJsonValueConfig_Selectors.Merge(m, src)
}
func (m *HttpJsonValueConfig_Selectors) XXX_Size() int {
	return xxx_messageInfo_HttpJsonValueConfig_Selectors.Size(m)
}
func (m *HttpJsonValueConfig_Selectors) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpJsonValueConfig_Selectors.DiscardUnknown(m)
}

var xxx_messageInfo_HttpJsonValueConfig_Selectors proto.InternalMessageInfo

func (m *HttpJsonValueConfig_Selectors) GetType() HttpJsonValueConfig_JsonValueParseType {
	if m != nil {
		return m.Type
	}
	return HttpJsonValueConfig_String
}

func (m *HttpJsonValueConfig_Selectors) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type AddRequest struct {
	// How often we need execute check
	Interval int32 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timeout for check request
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Config of the scheduler;
	//
	// Types that are valid to be assigned to Config:
	//	*AddRequest_Tcp
	//	*AddRequest_Sitemap
	//	*AddRequest_Grpc
	//	*AddRequest_Http
	//	*AddRequest_HttpValue
	Config               isAddRequest_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{9}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *AddRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type isAddRequest_Config interface {
	isAddRequest_Config()
}

type AddRequest_Tcp struct {
	Tcp *TcpConfig `protobuf:"bytes,3,opt,name=tcp,proto3,oneof"`
}

type AddRequest_Sitemap struct {
	Sitemap *SiteMapConfig `protobuf:"bytes,4,opt,name=sitemap,proto3,oneof"`
}

type AddRequest_Grpc struct {
	Grpc *GrpcConfig `protobuf:"bytes,5,opt,name=grpc,proto3,oneof"`
}

type AddRequest_Http struct {
	Http *HttpConfig `protobuf:"bytes,6,opt,name=http,proto3,oneof"`
}

type AddRequest_HttpValue struct {
	HttpValue *HttpJsonValueConfig `protobuf:"bytes,7,opt,name=httpValue,proto3,oneof"`
}

func (*AddRequest_Tcp) isAddRequest_Config() {}

func (*AddRequest_Sitemap) isAddRequest_Config() {}

func (*AddRequest_Grpc) isAddRequest_Config() {}

func (*AddRequest_Http) isAddRequest_Config() {}

func (*AddRequest_HttpValue) isAddRequest_Config() {}

func (m *AddRequest) GetConfig() isAddRequest_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *AddRequest) GetTcp() *TcpConfig {
	if x, ok := m.GetConfig().(*AddRequest_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (m *AddRequest) GetSitemap() *SiteMapConfig {
	if x, ok := m.GetConfig().(*AddRequest_Sitemap); ok {
		return x.Sitemap
	}
	return nil
}

func (m *AddRequest) GetGrpc() *GrpcConfig {
	if x, ok := m.GetConfig().(*AddRequest_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (m *AddRequest) GetHttp() *HttpConfig {
	if x, ok := m.GetConfig().(*AddRequest_Http); ok {
		return x.Http
	}
	return nil
}

func (m *AddRequest) GetHttpValue() *HttpJsonValueConfig {
	if x, ok := m.GetConfig().(*AddRequest_HttpValue); ok {
		return x.HttpValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddRequest_Tcp)(nil),
		(*AddRequest_Sitemap)(nil),
		(*AddRequest_Grpc)(nil),
		(*AddRequest_Http)(nil),
		(*AddRequest_HttpValue)(nil),
	}
}

type AddResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{10}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{11}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{12}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

func (m *RemoveResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{13}
}

func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{14}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunResponse) Reset()         { *m = RunResponse{} }
func (m *RunResponse) String() string { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()    {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{15}
}

func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse.Unmarshal(m, b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
}
func (m *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(m, src)
}
func (m *RunResponse) XXX_Size() int {
	return xxx_messageInfo_RunResponse.Size(m)
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

func (m *RunResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bb7e34c7817524, []int{16}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("squzy.v1.monitoring.SchedulerStatus", SchedulerStatus_name, SchedulerStatus_value)
	proto.RegisterEnum("squzy.v1.monitoring.SchedulerType", SchedulerType_name, SchedulerType_value)
	proto.RegisterEnum("squzy.v1.monitoring.HttpJsonValueConfig_JsonValueParseType", HttpJsonValueConfig_JsonValueParseType_name, HttpJsonValueConfig_JsonValueParseType_value)
	proto.RegisterType((*GetSchedulerByIdRequest)(nil), "squzy.v1.monitoring.GetSchedulerByIdRequest")
	proto.RegisterType((*Scheduler)(nil), "squzy.v1.monitoring.Scheduler")
	proto.RegisterType((*GetSchedulerListRequest)(nil), "squzy.v1.monitoring.GetSchedulerListRequest")
	proto.RegisterType((*GetSchedulerListResponse)(nil), "squzy.v1.monitoring.GetSchedulerListResponse")
	proto.RegisterType((*SiteMapConfig)(nil), "squzy.v1.monitoring.SiteMapConfig")
	proto.RegisterType((*TcpConfig)(nil), "squzy.v1.monitoring.TcpConfig")
	proto.RegisterType((*GrpcConfig)(nil), "squzy.v1.monitoring.GrpcConfig")
	proto.RegisterType((*HttpConfig)(nil), "squzy.v1.monitoring.HttpConfig")
	proto.RegisterMapType((map[string]string)(nil), "squzy.v1.monitoring.HttpConfig.HeadersEntry")
	proto.RegisterType((*HttpJsonValueConfig)(nil), "squzy.v1.monitoring.HttpJsonValueConfig")
	proto.RegisterMapType((map[string]string)(nil), "squzy.v1.monitoring.HttpJsonValueConfig.HeadersEntry")
	proto.RegisterType((*HttpJsonValueConfig_Selectors)(nil), "squzy.v1.monitoring.HttpJsonValueConfig.Selectors")
	proto.RegisterType((*AddRequest)(nil), "squzy.v1.monitoring.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "squzy.v1.monitoring.AddResponse")
	proto.RegisterType((*RemoveRequest)(nil), "squzy.v1.monitoring.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "squzy.v1.monitoring.RemoveResponse")
	proto.RegisterType((*RunRequest)(nil), "squzy.v1.monitoring.RunRequest")
	proto.RegisterType((*StopRequest)(nil), "squzy.v1.monitoring.StopRequest")
	proto.RegisterType((*RunResponse)(nil), "squzy.v1.monitoring.RunResponse")
	proto.RegisterType((*StopResponse)(nil), "squzy.v1.monitoring.StopResponse")
}

func init() { proto.RegisterFile("proto/v1/squzy_monitoring.proto", fileDescriptor_56bb7e34c7817524) }

var fileDescriptor_56bb7e34c7817524 = []byte{
	// 960 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5b, 0x73, 0xdb, 0x44,
	0x14, 0x8e, 0x2e, 0xb6, 0xe3, 0xe3, 0x26, 0x88, 0x2d, 0x53, 0x84, 0xa0, 0x89, 0x11, 0x3c, 0x84,
	0x4e, 0x51, 0xa6, 0xee, 0x14, 0x98, 0xc2, 0x30, 0x93, 0x8b, 0xa9, 0x81, 0xd6, 0x09, 0x6b, 0xd3,
	0x19, 0x78, 0x01, 0x45, 0xda, 0xda, 0x9a, 0xda, 0x5a, 0x55, 0x5a, 0x19, 0xc4, 0x3b, 0xbf, 0x8d,
	0xff, 0xc0, 0x33, 0x3f, 0x82, 0x47, 0x66, 0x57, 0x37, 0xdb, 0x95, 0x9c, 0x90, 0xf4, 0xc9, 0x7b,
	0xf9, 0xbe, 0xcf, 0x47, 0xe7, 0x7c, 0x7b, 0x76, 0x61, 0x3f, 0x08, 0x29, 0xa3, 0x87, 0x8b, 0x07,
	0x87, 0xd1, 0xab, 0xf8, 0x8f, 0xe4, 0x97, 0x39, 0xf5, 0x3d, 0x46, 0x43, 0xcf, 0x9f, 0x58, 0x62,
	0x07, 0xdd, 0x16, 0xeb, 0xd6, 0xe2, 0x81, 0x55, 0x6e, 0x19, 0xef, 0x4f, 0x28, 0x9d, 0xcc, 0xc8,
	0xa1, 0x80, 0x5c, 0xc4, 0x2f, 0x0e, 0xc9, 0x3c, 0x60, 0x49, 0xca, 0x30, 0x3f, 0x81, 0x77, 0x9f,
	0x10, 0x36, 0x72, 0xa6, 0xc4, 0x8d, 0x67, 0x24, 0x3c, 0x4e, 0xbe, 0x75, 0x31, 0x79, 0x15, 0x93,
	0x88, 0xa1, 0x5d, 0x90, 0x3d, 0x57, 0x97, 0xba, 0xd2, 0x41, 0x1b, 0xcb, 0x9e, 0x6b, 0xfe, 0xa5,
	0x40, 0xbb, 0x00, 0xae, 0xef, 0xa2, 0xcf, 0x40, 0x65, 0x49, 0x40, 0x74, 0xb9, 0x2b, 0x1d, 0xec,
	0xf6, 0x4c, 0xab, 0x22, 0x12, 0xab, 0x60, 0x8f, 0x93, 0x80, 0x60, 0x81, 0x47, 0x5f, 0x41, 0x33,
	0x62, 0x36, 0x8b, 0x23, 0x5d, 0x11, 0xcc, 0x8f, 0x37, 0x33, 0x47, 0x02, 0x8b, 0x33, 0x0e, 0xea,
	0x81, 0xc2, 0x9c, 0x40, 0x57, 0xbb, 0xd2, 0x41, 0xa7, 0xb7, 0x57, 0x49, 0x1d, 0x3b, 0xc1, 0x09,
	0xf5, 0x5f, 0x78, 0x93, 0xc1, 0x16, 0xe6, 0x60, 0xf4, 0x35, 0xb4, 0x22, 0x8f, 0x91, 0xb9, 0x1d,
	0xe8, 0x0d, 0xc1, 0xab, 0x09, 0xd6, 0x63, 0xe4, 0x99, 0x5d, 0x72, 0x73, 0x12, 0x7a, 0x04, 0xea,
	0x24, 0x0c, 0x1c, 0xbd, 0x29, 0xc8, 0xfb, 0x95, 0xe4, 0x27, 0x61, 0xe0, 0x14, 0x4c, 0x01, 0xe7,
	0xb4, 0x29, 0x63, 0x81, 0xde, 0xda, 0x40, 0x1b, 0x30, 0x56, 0xfe, 0xa1, 0x80, 0xa3, 0x01, 0xb4,
	0xf9, 0xef, 0x73, 0x7b, 0x16, 0x13, 0x7d, 0x5b, 0x70, 0x0f, 0x6a, 0xb9, 0xdf, 0x45, 0xd4, 0x17,
	0xc8, 0x42, 0xa4, 0x24, 0x1f, 0x6f, 0x43, 0xd3, 0x11, 0xcb, 0xe6, 0x7b, 0xab, 0x45, 0x7f, 0xea,
	0x45, 0x2c, 0x2b, 0xba, 0x39, 0x04, 0xfd, 0xf5, 0xad, 0x28, 0xa0, 0x7e, 0x44, 0x50, 0x0f, 0xd4,
	0x99, 0x17, 0x31, 0x5d, 0xea, 0x2a, 0xb5, 0xd9, 0x2e, 0x98, 0x58, 0x60, 0xcd, 0x13, 0xd8, 0x59,
	0x49, 0x24, 0xd2, 0x40, 0x89, 0xc3, 0x59, 0x66, 0x1c, 0x3e, 0x44, 0x5d, 0xe8, 0x38, 0xd4, 0x77,
	0xe2, 0x30, 0x24, 0xbe, 0x93, 0x08, 0x03, 0x35, 0xf0, 0xf2, 0x92, 0xf9, 0x10, 0xda, 0x45, 0x15,
	0x11, 0x02, 0x75, 0x4a, 0x45, 0x14, 0x5c, 0x41, 0x8c, 0xf9, 0x5a, 0x40, 0x43, 0x96, 0x71, 0xc5,
	0xd8, 0x1c, 0x02, 0x94, 0x55, 0x40, 0x3a, 0xb4, 0x22, 0x12, 0x2e, 0x3c, 0x87, 0x64, 0xc4, 0x7c,
	0x5a, 0xe8, 0xc9, 0x15, 0x7a, 0xca, 0x92, 0xde, 0xdf, 0x12, 0x40, 0x59, 0x1f, 0x74, 0x07, 0x9a,
	0x73, 0xc2, 0xa6, 0x34, 0x3f, 0x03, 0xd9, 0x2c, 0xff, 0x3e, 0xb9, 0xfc, 0xbe, 0x6f, 0xa0, 0x35,
	0x25, 0xb6, 0x4b, 0x42, 0x6e, 0x71, 0x9e, 0xb9, 0xfb, 0x97, 0xd4, 0xde, 0x1a, 0xa4, 0xf0, 0xbe,
	0xcf, 0xc2, 0x04, 0xe7, 0x64, 0xb4, 0x07, 0x90, 0xba, 0xfe, 0x84, 0xba, 0x44, 0x58, 0xbe, 0x81,
	0x97, 0x56, 0x8c, 0xc7, 0x70, 0x6b, 0x99, 0xc8, 0x23, 0x79, 0x49, 0x92, 0x3c, 0xd3, 0x2f, 0x49,
	0x82, 0xde, 0x81, 0xc6, 0x42, 0xf8, 0x28, 0x8d, 0x2e, 0x9d, 0x3c, 0x96, 0xbf, 0x90, 0xcc, 0x7f,
	0x14, 0xb8, 0x5d, 0x61, 0xa0, 0xff, 0xf1, 0x95, 0x67, 0xeb, 0x5f, 0xf9, 0xe8, 0xaa, 0x2e, 0xad,
	0xf9, 0xdc, 0x73, 0x68, 0x47, 0x64, 0x46, 0x1c, 0x46, 0xc3, 0x48, 0x57, 0x85, 0x64, 0xef, 0xca,
	0x92, 0xa3, 0x9c, 0x89, 0x4b, 0x91, 0x9b, 0x24, 0xc8, 0x08, 0xa0, 0x5d, 0x68, 0xa2, 0xb3, 0xac,
	0xd7, 0x49, 0xa2, 0x63, 0x7d, 0x79, 0xe5, 0xa8, 0x8a, 0xf9, 0xb9, 0x1d, 0x46, 0x64, 0xa9, 0x09,
	0x72, 0xbf, 0xd9, 0x6c, 0x9a, 0x7b, 0x90, 0x8f, 0x4d, 0x0c, 0xe8, 0x75, 0x3c, 0x02, 0x68, 0x8e,
	0x18, 0xff, 0x03, 0x6d, 0x0b, 0x6d, 0x83, 0x7a, 0x4c, 0xe9, 0x4c, 0x93, 0xf8, 0xea, 0x30, 0x9e,
	0x5f, 0x90, 0x50, 0x93, 0xf9, 0xea, 0xd8, 0x9b, 0x13, 0x4d, 0x41, 0x2d, 0x50, 0x8e, 0xfc, 0x44,
	0x53, 0xf9, 0x00, 0xdb, 0xbf, 0x69, 0x0d, 0xf3, 0x5f, 0x19, 0xe0, 0xc8, 0x2d, 0x3a, 0xbc, 0x01,
	0xdb, 0x9e, 0xcf, 0x48, 0xb8, 0xb0, 0xd3, 0x03, 0xd9, 0xc0, 0xc5, 0x9c, 0x1f, 0x18, 0xe6, 0xcd,
	0x09, 0x8d, 0xf3, 0x53, 0x95, 0x4f, 0xf3, 0x9e, 0xab, 0x5c, 0xb3, 0xe7, 0xaa, 0x37, 0xe9, 0xb9,
	0x8d, 0xeb, 0xf5, 0xdc, 0xe6, 0x0d, 0x7a, 0x6e, 0xeb, 0xcd, 0xf4, 0xdc, 0xbb, 0xd0, 0x11, 0x99,
	0xcf, 0x7a, 0xe9, 0xfa, 0xe5, 0xba, 0x0f, 0x3b, 0x98, 0xcc, 0xe9, 0x82, 0xd4, 0xdd, 0xbe, 0x5d,
	0xd8, 0xcd, 0x01, 0x35, 0x12, 0x1f, 0x00, 0xe0, 0xd8, 0xaf, 0xe3, 0xdf, 0x85, 0xce, 0x88, 0xd1,
	0x60, 0xc3, 0xb6, 0x20, 0xd7, 0x68, 0xef, 0xc1, 0xad, 0x94, 0x5d, 0xbd, 0x7f, 0xef, 0x73, 0x78,
	0x6b, 0xed, 0x8a, 0xe6, 0x9e, 0xc4, 0x3f, 0x0e, 0x87, 0xfd, 0x53, 0x6d, 0x0b, 0x75, 0xa0, 0x35,
	0x1a, 0x9f, 0x9d, 0x9f, 0xf7, 0x4f, 0x35, 0x89, 0x4f, 0x70, 0xff, 0xd9, 0xd9, 0xf3, 0xfe, 0xa9,
	0xa6, 0xdc, 0x7b, 0x0a, 0x3b, 0x2b, 0xaf, 0x02, 0xee, 0xd5, 0xb1, 0x13, 0xa4, 0xee, 0xe6, 0x15,
	0xd5, 0x24, 0x3e, 0xe2, 0x89, 0xd6, 0x64, 0xa1, 0x93, 0x5a, 0x44, 0x53, 0xd0, 0xdb, 0xb0, 0xb3,
	0x92, 0x7f, 0x4d, 0xed, 0xfd, 0xa9, 0x02, 0x2a, 0xe4, 0xa2, 0xfe, 0xef, 0xc4, 0x89, 0x19, 0x0d,
	0xd1, 0x4f, 0xa0, 0xad, 0x5f, 0x6a, 0xe8, 0x8e, 0x95, 0x3e, 0x8b, 0xac, 0xfc, 0x59, 0x64, 0xf5,
	0xf9, 0xb3, 0xc8, 0xf8, 0xb4, 0xda, 0x5b, 0x75, 0x77, 0xe2, 0xaf, 0xab, 0xd2, 0xfc, 0xfd, 0x84,
	0xee, 0x5f, 0x2a, 0xb1, 0xf4, 0xcc, 0x32, 0x2e, 0xb9, 0x47, 0xd1, 0x00, 0x94, 0x23, 0xd7, 0x45,
	0xd5, 0xe6, 0x2d, 0x0f, 0xb3, 0xd1, 0xad, 0x07, 0x64, 0xb1, 0xfe, 0x00, 0xcd, 0xd4, 0x42, 0xa8,
	0xfa, 0xf4, 0xad, 0x18, 0xd0, 0xf8, 0x68, 0x23, 0x26, 0x93, 0x1c, 0x80, 0x82, 0x63, 0xbf, 0x26,
	0xb8, 0xd2, 0x8d, 0x35, 0xc1, 0x2d, 0x3b, 0xee, 0x7b, 0x50, 0xb9, 0xc3, 0x50, 0x35, 0x72, 0xc9,
	0xba, 0xc6, 0x87, 0x1b, 0x10, 0xa9, 0xd8, 0x71, 0xe3, 0x67, 0xc5, 0x0e, 0xbc, 0x8b, 0xa6, 0xa8,
	0xed, 0xc3, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x30, 0xd7, 0x33, 0x21, 0x38, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SchedulersExecutorClient is the client API for SchedulersExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulersExecutorClient interface {
	GetSchedulerList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetSchedulerListResponse, error)
	GetSchedulerById(ctx context.Context, in *GetSchedulerByIdRequest, opts ...grpc.CallOption) (*Scheduler, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
}

type schedulersExecutorClient struct {
	cc *grpc.ClientConn
}

func NewSchedulersExecutorClient(cc *grpc.ClientConn) SchedulersExecutorClient {
	return &schedulersExecutorClient{cc}
}

func (c *schedulersExecutorClient) GetSchedulerList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetSchedulerListResponse, error) {
	out := new(GetSchedulerListResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/GetSchedulerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulersExecutorClient) GetSchedulerById(ctx context.Context, in *GetSchedulerByIdRequest, opts ...grpc.CallOption) (*Scheduler, error) {
	out := new(Scheduler)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/GetSchedulerById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulersExecutorClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulersExecutorClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulersExecutorClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulersExecutorClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.SchedulersExecutor/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulersExecutorServer is the server API for SchedulersExecutor service.
type SchedulersExecutorServer interface {
	GetSchedulerList(context.Context, *empty.Empty) (*GetSchedulerListResponse, error)
	GetSchedulerById(context.Context, *GetSchedulerByIdRequest) (*Scheduler, error)
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Run(context.Context, *RunRequest) (*RunResponse, error)
	Stop(context.Context, *StopRequest) (*StopResponse, error)
}

// UnimplementedSchedulersExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulersExecutorServer struct {
}

func (*UnimplementedSchedulersExecutorServer) GetSchedulerList(ctx context.Context, req *empty.Empty) (*GetSchedulerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSchedulerList not implemented")
}
func (*UnimplementedSchedulersExecutorServer) GetSchedulerById(ctx context.Context, req *GetSchedulerByIdRequest) (*Scheduler, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSchedulerById not implemented")
}
func (*UnimplementedSchedulersExecutorServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedSchedulersExecutorServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedSchedulersExecutorServer) Run(ctx context.Context, req *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedSchedulersExecutorServer) Stop(ctx context.Context, req *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}

func RegisterSchedulersExecutorServer(s *grpc.Server, srv SchedulersExecutorServer) {
	s.RegisterService(&_SchedulersExecutor_serviceDesc, srv)
}

func _SchedulersExecutor_GetSchedulerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).GetSchedulerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/GetSchedulerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).GetSchedulerList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulersExecutor_GetSchedulerById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchedulerByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).GetSchedulerById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/GetSchedulerById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).GetSchedulerById(ctx, req.(*GetSchedulerByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulersExecutor_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulersExecutor_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulersExecutor_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulersExecutor_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulersExecutorServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.SchedulersExecutor/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulersExecutorServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchedulersExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "squzy.v1.monitoring.SchedulersExecutor",
	HandlerType: (*SchedulersExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSchedulerList",
			Handler:    _SchedulersExecutor_GetSchedulerList_Handler,
		},
		{
			MethodName: "GetSchedulerById",
			Handler:    _SchedulersExecutor_GetSchedulerById_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _SchedulersExecutor_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _SchedulersExecutor_Remove_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _SchedulersExecutor_Run_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _SchedulersExecutor_Stop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/squzy_monitoring.proto",
}
