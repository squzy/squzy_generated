// Code generated by protoc-gen-go. DO NOT EDIT.
// source: squzy/service.proto

package squzy_core_v1_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunResponse_Error_Code int32

const (
	// Internal error
	RunResponse_Error_INTERNAL_ERROR RunResponse_Error_Code = 0
	// Already stoped
	RunResponse_Error_ALREADY_RUN RunResponse_Error_Code = 1
)

var RunResponse_Error_Code_name = map[int32]string{
	0: "INTERNAL_ERROR",
	1: "ALREADY_RUN",
}

var RunResponse_Error_Code_value = map[string]int32{
	"INTERNAL_ERROR": 0,
	"ALREADY_RUN":    1,
}

func (x RunResponse_Error_Code) String() string {
	return proto.EnumName(RunResponse_Error_Code_name, int32(x))
}

func (RunResponse_Error_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{2, 0, 0}
}

type StopResponse_Error_Code int32

const (
	// Internal error
	StopResponse_Error_INTERNAL_ERROR StopResponse_Error_Code = 0
	// Already stoped
	StopResponse_Error_ALREADY_STOP StopResponse_Error_Code = 1
)

var StopResponse_Error_Code_name = map[int32]string{
	0: "INTERNAL_ERROR",
	1: "ALREADY_STOP",
}

var StopResponse_Error_Code_value = map[string]int32{
	"INTERNAL_ERROR": 0,
	"ALREADY_STOP":   1,
}

func (x StopResponse_Error_Code) String() string {
	return proto.EnumName(StopResponse_Error_Code_name, int32(x))
}

func (StopResponse_Error_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{3, 0, 0}
}

type RunRequest struct {
	Port                 int32    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{0}
}

func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{1}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

type RunResponse struct {
	// Types that are valid to be assigned to Result:
	//	*RunResponse_Status
	//	*RunResponse_Error_
	Result               isRunResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RunResponse) Reset()         { *m = RunResponse{} }
func (m *RunResponse) String() string { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()    {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{2}
}

func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse.Unmarshal(m, b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
}
func (m *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(m, src)
}
func (m *RunResponse) XXX_Size() int {
	return xxx_messageInfo_RunResponse.Size(m)
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

type isRunResponse_Result interface {
	isRunResponse_Result()
}

type RunResponse_Status struct {
	Status bool `protobuf:"varint,1,opt,name=status,proto3,oneof"`
}

type RunResponse_Error_ struct {
	Error *RunResponse_Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RunResponse_Status) isRunResponse_Result() {}

func (*RunResponse_Error_) isRunResponse_Result() {}

func (m *RunResponse) GetResult() isRunResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RunResponse) GetStatus() bool {
	if x, ok := m.GetResult().(*RunResponse_Status); ok {
		return x.Status
	}
	return false
}

func (m *RunResponse) GetError() *RunResponse_Error {
	if x, ok := m.GetResult().(*RunResponse_Error_); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunResponse_Status)(nil),
		(*RunResponse_Error_)(nil),
	}
}

type RunResponse_Error struct {
	Code                 RunResponse_Error_Code `protobuf:"varint,1,opt,name=code,proto3,enum=squzy.core.v1.server.RunResponse_Error_Code" json:"code,omitempty"`
	Message              string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RunResponse_Error) Reset()         { *m = RunResponse_Error{} }
func (m *RunResponse_Error) String() string { return proto.CompactTextString(m) }
func (*RunResponse_Error) ProtoMessage()    {}
func (*RunResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{2, 0}
}

func (m *RunResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse_Error.Unmarshal(m, b)
}
func (m *RunResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse_Error.Marshal(b, m, deterministic)
}
func (m *RunResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse_Error.Merge(m, src)
}
func (m *RunResponse_Error) XXX_Size() int {
	return xxx_messageInfo_RunResponse_Error.Size(m)
}
func (m *RunResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse_Error proto.InternalMessageInfo

func (m *RunResponse_Error) GetCode() RunResponse_Error_Code {
	if m != nil {
		return m.Code
	}
	return RunResponse_Error_INTERNAL_ERROR
}

func (m *RunResponse_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StopResponse struct {
	// Types that are valid to be assigned to Result:
	//	*StopResponse_Status
	//	*StopResponse_Error_
	Result               isStopResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{3}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

type isStopResponse_Result interface {
	isStopResponse_Result()
}

type StopResponse_Status struct {
	Status bool `protobuf:"varint,1,opt,name=status,proto3,oneof"`
}

type StopResponse_Error_ struct {
	Error *StopResponse_Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*StopResponse_Status) isStopResponse_Result() {}

func (*StopResponse_Error_) isStopResponse_Result() {}

func (m *StopResponse) GetResult() isStopResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *StopResponse) GetStatus() bool {
	if x, ok := m.GetResult().(*StopResponse_Status); ok {
		return x.Status
	}
	return false
}

func (m *StopResponse) GetError() *StopResponse_Error {
	if x, ok := m.GetResult().(*StopResponse_Error_); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StopResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StopResponse_Status)(nil),
		(*StopResponse_Error_)(nil),
	}
}

type StopResponse_Error struct {
	Code                 StopResponse_Error_Code `protobuf:"varint,1,opt,name=code,proto3,enum=squzy.core.v1.server.StopResponse_Error_Code" json:"code,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StopResponse_Error) Reset()         { *m = StopResponse_Error{} }
func (m *StopResponse_Error) String() string { return proto.CompactTextString(m) }
func (*StopResponse_Error) ProtoMessage()    {}
func (*StopResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_4da5ba9dd43df922, []int{3, 0}
}

func (m *StopResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse_Error.Unmarshal(m, b)
}
func (m *StopResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse_Error.Marshal(b, m, deterministic)
}
func (m *StopResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse_Error.Merge(m, src)
}
func (m *StopResponse_Error) XXX_Size() int {
	return xxx_messageInfo_StopResponse_Error.Size(m)
}
func (m *StopResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse_Error proto.InternalMessageInfo

func (m *StopResponse_Error) GetCode() StopResponse_Error_Code {
	if m != nil {
		return m.Code
	}
	return StopResponse_Error_INTERNAL_ERROR
}

func (m *StopResponse_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("squzy.core.v1.server.RunResponse_Error_Code", RunResponse_Error_Code_name, RunResponse_Error_Code_value)
	proto.RegisterEnum("squzy.core.v1.server.StopResponse_Error_Code", StopResponse_Error_Code_name, StopResponse_Error_Code_value)
	proto.RegisterType((*RunRequest)(nil), "squzy.core.v1.server.RunRequest")
	proto.RegisterType((*StopRequest)(nil), "squzy.core.v1.server.StopRequest")
	proto.RegisterType((*RunResponse)(nil), "squzy.core.v1.server.RunResponse")
	proto.RegisterType((*RunResponse_Error)(nil), "squzy.core.v1.server.RunResponse.Error")
	proto.RegisterType((*StopResponse)(nil), "squzy.core.v1.server.StopResponse")
	proto.RegisterType((*StopResponse_Error)(nil), "squzy.core.v1.server.StopResponse.Error")
}

func init() { proto.RegisterFile("squzy/service.proto", fileDescriptor_4da5ba9dd43df922) }

var fileDescriptor_4da5ba9dd43df922 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x29, 0x96, 0x8a, 0x53, 0x44, 0x32, 0x7a, 0x68, 0x38, 0x95, 0x5e, 0x24, 0x11, 0xd7,
	0x88, 0x0f, 0x20, 0x55, 0x9b, 0xa0, 0x41, 0x30, 0x03, 0x1e, 0x3c, 0x11, 0x84, 0x8d, 0x31, 0x51,
	0xb6, 0xec, 0xb6, 0x24, 0x7a, 0xf7, 0xe0, 0xcd, 0xf8, 0x0a, 0xbe, 0xa8, 0xe9, 0x02, 0x06, 0x0c,
	0x01, 0x6e, 0x9d, 0xe9, 0xfc, 0xff, 0xcc, 0x7c, 0xd3, 0xc2, 0xbe, 0x1a, 0xc5, 0xef, 0x6f, 0x27,
	0x8a, 0xcb, 0xf1, 0x73, 0x9f, 0xb3, 0x50, 0x8a, 0x48, 0xe0, 0x81, 0x4e, 0xb2, 0xbe, 0x90, 0x9c,
	0x8d, 0x4f, 0x59, 0xf2, 0x92, 0x4b, 0xcf, 0x05, 0xa0, 0x78, 0x48, 0x7c, 0x14, 0x73, 0x15, 0x21,
	0x82, 0x19, 0x0a, 0x19, 0x39, 0x86, 0x6b, 0x94, 0x33, 0xa4, 0x9f, 0xbd, 0x5d, 0xb0, 0xdb, 0x91,
	0x08, 0xa7, 0x25, 0xde, 0x47, 0x1a, 0x6c, 0xad, 0x50, 0xa1, 0x18, 0x2a, 0x8e, 0x0e, 0x58, 0x2a,
	0xea, 0x45, 0xb1, 0xd2, 0xa2, 0x6c, 0x3d, 0x45, 0xd3, 0x18, 0xcf, 0x21, 0xc3, 0xa5, 0x14, 0xd2,
	0x49, 0xbb, 0x46, 0xd9, 0xae, 0x1e, 0xb2, 0x65, 0x03, 0xb0, 0x39, 0x2f, 0x16, 0x24, 0xe5, 0xf5,
	0x14, 0x4d, 0x74, 0xc5, 0x2f, 0x03, 0x32, 0x3a, 0x85, 0x35, 0x30, 0xfb, 0x62, 0xc0, 0x75, 0x8b,
	0x7c, 0xb5, 0xb2, 0xa1, 0x13, 0xbb, 0x14, 0x03, 0x4e, 0x5a, 0x89, 0x0e, 0x6c, 0xbf, 0x72, 0xa5,
	0x7a, 0x4f, 0x5c, 0x8f, 0xb3, 0x43, 0xb3, 0xd0, 0x3b, 0x02, 0x33, 0xa9, 0x43, 0x84, 0xfc, 0x75,
	0xb3, 0x13, 0x50, 0xd3, 0x6f, 0x74, 0x03, 0xa2, 0x16, 0x15, 0x52, 0xb8, 0x07, 0xb6, 0xdf, 0xa0,
	0xc0, 0xbf, 0x7a, 0xe8, 0xd2, 0x7d, 0xb3, 0x60, 0x5c, 0x64, 0xc1, 0x92, 0x5c, 0xc5, 0x2f, 0x91,
	0xf7, 0x99, 0x86, 0xdc, 0x84, 0xcb, 0x5a, 0x10, 0xb5, 0x45, 0x10, 0xe5, 0xe5, 0xe3, 0xcf, 0x9b,
	0xfd, 0x27, 0xf1, 0xfd, 0x47, 0xc2, 0x5f, 0x20, 0x71, 0xbc, 0xa9, 0xd5, 0x66, 0x28, 0x2a, 0x2b,
	0x50, 0x14, 0x20, 0x37, 0x43, 0xd1, 0xee, 0xb4, 0xee, 0xe6, 0x59, 0x54, 0x7f, 0x0c, 0xb0, 0xda,
	0xba, 0x35, 0xde, 0xc0, 0x16, 0xc5, 0x43, 0x74, 0x57, 0x9c, 0x48, 0x7f, 0x47, 0xc5, 0xd2, 0xda,
	0x23, 0xe2, 0x2d, 0x98, 0xc9, 0x26, 0x58, 0x5a, 0xb5, 0xe5, 0xc4, 0xcd, 0x5b, 0x0f, 0xe2, 0xd1,
	0xd2, 0xff, 0xc1, 0xd9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x1f, 0x09, 0x1c, 0x1e, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/squzy.core.v1.server.Server/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/squzy.core.v1.server.Server/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	Run(context.Context, *RunRequest) (*RunResponse, error)
	Stop(context.Context, *StopRequest) (*StopResponse, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) Run(ctx context.Context, req *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedServerServer) Stop(ctx context.Context, req *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.core.v1.server.Server/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.core.v1.server.Server/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "squzy.core.v1.server.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _Server_Run_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Server_Stop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "squzy/service.proto",
}
