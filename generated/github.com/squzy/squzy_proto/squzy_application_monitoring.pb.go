// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: proto/v1/squzy_application_monitoring.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationStatus int32

const (
	ApplicationStatus_APPLICATION_STATUS_UNSPECIFIED ApplicationStatus = 0
	ApplicationStatus_APPLICATION_STATUS_ENABLED     ApplicationStatus = 1
	ApplicationStatus_APPLICATION_STATUS_DISABLED    ApplicationStatus = 2
	ApplicationStatus_APPLICATION_STATUS_ARCHIVED    ApplicationStatus = 3
)

// Enum value maps for ApplicationStatus.
var (
	ApplicationStatus_name = map[int32]string{
		0: "APPLICATION_STATUS_UNSPECIFIED",
		1: "APPLICATION_STATUS_ENABLED",
		2: "APPLICATION_STATUS_DISABLED",
		3: "APPLICATION_STATUS_ARCHIVED",
	}
	ApplicationStatus_value = map[string]int32{
		"APPLICATION_STATUS_UNSPECIFIED": 0,
		"APPLICATION_STATUS_ENABLED":     1,
		"APPLICATION_STATUS_DISABLED":    2,
		"APPLICATION_STATUS_ARCHIVED":    3,
	}
)

func (x ApplicationStatus) Enum() *ApplicationStatus {
	p := new(ApplicationStatus)
	*p = x
	return p
}

func (x ApplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_application_monitoring_proto_enumTypes[0].Descriptor()
}

func (ApplicationStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_application_monitoring_proto_enumTypes[0]
}

func (x ApplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationStatus.Descriptor instead.
func (ApplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{0}
}

type TransactionStatus int32

const (
	TransactionStatus_TRANSACTION_CODE_UNSPECIFIED TransactionStatus = 0
	TransactionStatus_TRANSACTION_SUCCESSFUL       TransactionStatus = 1
	TransactionStatus_TRANSACTION_FAILED           TransactionStatus = 2
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "TRANSACTION_CODE_UNSPECIFIED",
		1: "TRANSACTION_SUCCESSFUL",
		2: "TRANSACTION_FAILED",
	}
	TransactionStatus_value = map[string]int32{
		"TRANSACTION_CODE_UNSPECIFIED": 0,
		"TRANSACTION_SUCCESSFUL":       1,
		"TRANSACTION_FAILED":           2,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_application_monitoring_proto_enumTypes[1].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_application_monitoring_proto_enumTypes[1]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{1}
}

type TransactionType int32

const (
	TransactionType_TRANSACTION_TYPE_UNSPECIFIED TransactionType = 0
	TransactionType_TRANSACTION_TYPE_XHR         TransactionType = 1
	TransactionType_TRANSACTION_TYPE_FETCH       TransactionType = 2
	TransactionType_TRANSACTION_TYPE_WEBSOCKET   TransactionType = 3
	TransactionType_TRANSACTION_TYPE_HTTP        TransactionType = 4
	TransactionType_TRANSACTION_TYPE_GRPC        TransactionType = 5
	TransactionType_TRANSACTION_TYPE_DB          TransactionType = 6
	TransactionType_TRANSACTION_TYPE_INTERNAL    TransactionType = 7
	TransactionType_TRANSACTION_TYPE_ROUTER      TransactionType = 8
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "TRANSACTION_TYPE_UNSPECIFIED",
		1: "TRANSACTION_TYPE_XHR",
		2: "TRANSACTION_TYPE_FETCH",
		3: "TRANSACTION_TYPE_WEBSOCKET",
		4: "TRANSACTION_TYPE_HTTP",
		5: "TRANSACTION_TYPE_GRPC",
		6: "TRANSACTION_TYPE_DB",
		7: "TRANSACTION_TYPE_INTERNAL",
		8: "TRANSACTION_TYPE_ROUTER",
	}
	TransactionType_value = map[string]int32{
		"TRANSACTION_TYPE_UNSPECIFIED": 0,
		"TRANSACTION_TYPE_XHR":         1,
		"TRANSACTION_TYPE_FETCH":       2,
		"TRANSACTION_TYPE_WEBSOCKET":   3,
		"TRANSACTION_TYPE_HTTP":        4,
		"TRANSACTION_TYPE_GRPC":        5,
		"TRANSACTION_TYPE_DB":          6,
		"TRANSACTION_TYPE_INTERNAL":    7,
		"TRANSACTION_TYPE_ROUTER":      8,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_application_monitoring_proto_enumTypes[2].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_application_monitoring_proto_enumTypes[2]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{2}
}

type AgentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *AgentIdRequest) Reset() {
	*x = AgentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentIdRequest) ProtoMessage() {}

func (x *AgentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentIdRequest.ProtoReflect.Descriptor instead.
func (*AgentIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *AgentIdRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type ApplicationByIdReuqest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *ApplicationByIdReuqest) Reset() {
	*x = ApplicationByIdReuqest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationByIdReuqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationByIdReuqest) ProtoMessage() {}

func (x *ApplicationByIdReuqest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationByIdReuqest.ProtoReflect.Descriptor instead.
func (*ApplicationByIdReuqest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationByIdReuqest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetApplicationListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applications []*Application `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
}

func (x *GetApplicationListResponse) Reset() {
	*x = GetApplicationListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationListResponse) ProtoMessage() {}

func (x *GetApplicationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationListResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationListResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *GetApplicationListResponse) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Uniq name provided from developer
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// host name
	HostName string            `protobuf:"bytes,3,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"` // Is application can recieved transactions
	Status   ApplicationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=squzy.v1.monitoring.ApplicationStatus" json:"status,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Application) GetStatus() ApplicationStatus {
	if x != nil {
		return x.Status
	}
	return ApplicationStatus_APPLICATION_STATUS_UNSPECIFIED
}

type ApplicationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uniq name provided from developer
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// host name
	HostName string `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	// agent id on host
	AgentId string `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *ApplicationInfo) Reset() {
	*x = ApplicationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationInfo) ProtoMessage() {}

func (x *ApplicationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationInfo.ProtoReflect.Descriptor instead.
func (*ApplicationInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ApplicationInfo) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type InitializeApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	TracingHeader string `protobuf:"bytes,2,opt,name=tracing_header,json=tracingHeader,proto3" json:"tracing_header,omitempty"`
}

func (x *InitializeApplicationResponse) Reset() {
	*x = InitializeApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeApplicationResponse) ProtoMessage() {}

func (x *InitializeApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeApplicationResponse.ProtoReflect.Descriptor instead.
func (*InitializeApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *InitializeApplicationResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *InitializeApplicationResponse) GetTracingHeader() string {
	if x != nil {
		return x.TracingHeader
	}
	return ""
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application id from init request
	ApplicationId string `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// Parent transaction id, if "" - then first transaction
	ParentId string `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Meta about request
	Meta *TransactionInfo_Meta `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// Name of transactions (should be uniq per application)
	Name      string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status    TransactionStatus      `protobuf:"varint,8,opt,name=status,proto3,enum=squzy.v1.monitoring.TransactionStatus" json:"status,omitempty"`
	Type      TransactionType        `protobuf:"varint,9,opt,name=type,proto3,enum=squzy.v1.monitoring.TransactionType" json:"type,omitempty"`
	Error     *TransactionInfo_Error `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionInfo) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *TransactionInfo) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *TransactionInfo) GetMeta() *TransactionInfo_Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *TransactionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransactionInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TransactionInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TransactionInfo) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_CODE_UNSPECIFIED
}

func (x *TransactionInfo) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *TransactionInfo) GetError() *TransactionInfo_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TransactionInfo_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TransactionInfo_Error) Reset() {
	*x = TransactionInfo_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo_Error) ProtoMessage() {}

func (x *TransactionInfo_Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo_Error.ProtoReflect.Descriptor instead.
func (*TransactionInfo_Error) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TransactionInfo_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TransactionInfo_Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *TransactionInfo_Meta) Reset() {
	*x = TransactionInfo_Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo_Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo_Meta) ProtoMessage() {}

func (x *TransactionInfo_Meta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_application_monitoring_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo_Meta.ProtoReflect.Descriptor instead.
func (*TransactionInfo_Meta) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP(), []int{6, 1}
}

func (x *TransactionInfo_Meta) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TransactionInfo_Meta) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TransactionInfo_Meta) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

var File_proto_v1_squzy_application_monitoring_proto protoreflect.FileDescriptor

var file_proto_v1_squzy_application_monitoring_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2b, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x75, 0x71, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x6d, 0x0a, 0x1d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x22, 0xd1, 0x04, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x21, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x46, 0x0a,
	0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x2a, 0x99, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x41,
	0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x03, 0x2a, 0x69, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46,
	0x55, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x94, 0x02, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x48, 0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x45, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x42,
	0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x54, 0x54,
	0x50, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x42, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x52, 0x10, 0x08, 0x32, 0xce, 0x06, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x71, 0x0a,
	0x15, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x32, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x75,
	0x71, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x75, 0x71, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66,
	0x0a, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x75,
	0x71, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x75, 0x71, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x73, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_v1_squzy_application_monitoring_proto_rawDescOnce sync.Once
	file_proto_v1_squzy_application_monitoring_proto_rawDescData = file_proto_v1_squzy_application_monitoring_proto_rawDesc
)

func file_proto_v1_squzy_application_monitoring_proto_rawDescGZIP() []byte {
	file_proto_v1_squzy_application_monitoring_proto_rawDescOnce.Do(func() {
		file_proto_v1_squzy_application_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_squzy_application_monitoring_proto_rawDescData)
	})
	return file_proto_v1_squzy_application_monitoring_proto_rawDescData
}

var file_proto_v1_squzy_application_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_v1_squzy_application_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_v1_squzy_application_monitoring_proto_goTypes = []interface{}{
	(ApplicationStatus)(0),                // 0: squzy.v1.monitoring.ApplicationStatus
	(TransactionStatus)(0),                // 1: squzy.v1.monitoring.TransactionStatus
	(TransactionType)(0),                  // 2: squzy.v1.monitoring.TransactionType
	(*AgentIdRequest)(nil),                // 3: squzy.v1.monitoring.AgentIdRequest
	(*ApplicationByIdReuqest)(nil),        // 4: squzy.v1.monitoring.ApplicationByIdReuqest
	(*GetApplicationListResponse)(nil),    // 5: squzy.v1.monitoring.GetApplicationListResponse
	(*Application)(nil),                   // 6: squzy.v1.monitoring.Application
	(*ApplicationInfo)(nil),               // 7: squzy.v1.monitoring.ApplicationInfo
	(*InitializeApplicationResponse)(nil), // 8: squzy.v1.monitoring.InitializeApplicationResponse
	(*TransactionInfo)(nil),               // 9: squzy.v1.monitoring.TransactionInfo
	(*TransactionInfo_Error)(nil),         // 10: squzy.v1.monitoring.TransactionInfo.Error
	(*TransactionInfo_Meta)(nil),          // 11: squzy.v1.monitoring.TransactionInfo.Meta
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 13: google.protobuf.Empty
}
var file_proto_v1_squzy_application_monitoring_proto_depIdxs = []int32{
	6,  // 0: squzy.v1.monitoring.GetApplicationListResponse.applications:type_name -> squzy.v1.monitoring.Application
	0,  // 1: squzy.v1.monitoring.Application.status:type_name -> squzy.v1.monitoring.ApplicationStatus
	11, // 2: squzy.v1.monitoring.TransactionInfo.meta:type_name -> squzy.v1.monitoring.TransactionInfo.Meta
	12, // 3: squzy.v1.monitoring.TransactionInfo.start_time:type_name -> google.protobuf.Timestamp
	12, // 4: squzy.v1.monitoring.TransactionInfo.end_time:type_name -> google.protobuf.Timestamp
	1,  // 5: squzy.v1.monitoring.TransactionInfo.status:type_name -> squzy.v1.monitoring.TransactionStatus
	2,  // 6: squzy.v1.monitoring.TransactionInfo.type:type_name -> squzy.v1.monitoring.TransactionType
	10, // 7: squzy.v1.monitoring.TransactionInfo.error:type_name -> squzy.v1.monitoring.TransactionInfo.Error
	7,  // 8: squzy.v1.monitoring.ApplicationMonitoring.InitializeApplication:input_type -> squzy.v1.monitoring.ApplicationInfo
	9,  // 9: squzy.v1.monitoring.ApplicationMonitoring.SaveTransaction:input_type -> squzy.v1.monitoring.TransactionInfo
	4,  // 10: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationById:input_type -> squzy.v1.monitoring.ApplicationByIdReuqest
	13, // 11: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationList:input_type -> google.protobuf.Empty
	4,  // 12: squzy.v1.monitoring.ApplicationMonitoring.ArchiveApplicationById:input_type -> squzy.v1.monitoring.ApplicationByIdReuqest
	4,  // 13: squzy.v1.monitoring.ApplicationMonitoring.EnableApplicationById:input_type -> squzy.v1.monitoring.ApplicationByIdReuqest
	4,  // 14: squzy.v1.monitoring.ApplicationMonitoring.DisableApplicationById:input_type -> squzy.v1.monitoring.ApplicationByIdReuqest
	3,  // 15: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationListByAgentId:input_type -> squzy.v1.monitoring.AgentIdRequest
	8,  // 16: squzy.v1.monitoring.ApplicationMonitoring.InitializeApplication:output_type -> squzy.v1.monitoring.InitializeApplicationResponse
	13, // 17: squzy.v1.monitoring.ApplicationMonitoring.SaveTransaction:output_type -> google.protobuf.Empty
	6,  // 18: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationById:output_type -> squzy.v1.monitoring.Application
	5,  // 19: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationList:output_type -> squzy.v1.monitoring.GetApplicationListResponse
	6,  // 20: squzy.v1.monitoring.ApplicationMonitoring.ArchiveApplicationById:output_type -> squzy.v1.monitoring.Application
	6,  // 21: squzy.v1.monitoring.ApplicationMonitoring.EnableApplicationById:output_type -> squzy.v1.monitoring.Application
	6,  // 22: squzy.v1.monitoring.ApplicationMonitoring.DisableApplicationById:output_type -> squzy.v1.monitoring.Application
	5,  // 23: squzy.v1.monitoring.ApplicationMonitoring.GetApplicationListByAgentId:output_type -> squzy.v1.monitoring.GetApplicationListResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_v1_squzy_application_monitoring_proto_init() }
func file_proto_v1_squzy_application_monitoring_proto_init() {
	if File_proto_v1_squzy_application_monitoring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationByIdReuqest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicationListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_application_monitoring_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo_Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_squzy_application_monitoring_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_squzy_application_monitoring_proto_goTypes,
		DependencyIndexes: file_proto_v1_squzy_application_monitoring_proto_depIdxs,
		EnumInfos:         file_proto_v1_squzy_application_monitoring_proto_enumTypes,
		MessageInfos:      file_proto_v1_squzy_application_monitoring_proto_msgTypes,
	}.Build()
	File_proto_v1_squzy_application_monitoring_proto = out.File
	file_proto_v1_squzy_application_monitoring_proto_rawDesc = nil
	file_proto_v1_squzy_application_monitoring_proto_goTypes = nil
	file_proto_v1_squzy_application_monitoring_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApplicationMonitoringClient is the client API for ApplicationMonitoring service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationMonitoringClient interface {
	// protolint:disable:next MAX_LINE_LENGTH
	InitializeApplication(ctx context.Context, in *ApplicationInfo, opts ...grpc.CallOption) (*InitializeApplicationResponse, error)
	SaveTransaction(ctx context.Context, in *TransactionInfo, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error)
	// protolint:disable:next MAX_LINE_LENGTH
	GetApplicationList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetApplicationListResponse, error)
	// protolint:disable:next MAX_LINE_LENGTH
	ArchiveApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error)
	EnableApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error)
	DisableApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error)
	// protolint:disable:next MAX_LINE_LENGTH
	GetApplicationListByAgentId(ctx context.Context, in *AgentIdRequest, opts ...grpc.CallOption) (*GetApplicationListResponse, error)
}

type applicationMonitoringClient struct {
	cc grpc.ClientConnInterface
}

func NewApplicationMonitoringClient(cc grpc.ClientConnInterface) ApplicationMonitoringClient {
	return &applicationMonitoringClient{cc}
}

func (c *applicationMonitoringClient) InitializeApplication(ctx context.Context, in *ApplicationInfo, opts ...grpc.CallOption) (*InitializeApplicationResponse, error) {
	out := new(InitializeApplicationResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/InitializeApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) SaveTransaction(ctx context.Context, in *TransactionInfo, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/SaveTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) GetApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) GetApplicationList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetApplicationListResponse, error) {
	out := new(GetApplicationListResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) ArchiveApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/ArchiveApplicationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) EnableApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/EnableApplicationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) DisableApplicationById(ctx context.Context, in *ApplicationByIdReuqest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/DisableApplicationById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationMonitoringClient) GetApplicationListByAgentId(ctx context.Context, in *AgentIdRequest, opts ...grpc.CallOption) (*GetApplicationListResponse, error) {
	out := new(GetApplicationListResponse)
	err := c.cc.Invoke(ctx, "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationListByAgentId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationMonitoringServer is the server API for ApplicationMonitoring service.
type ApplicationMonitoringServer interface {
	// protolint:disable:next MAX_LINE_LENGTH
	InitializeApplication(context.Context, *ApplicationInfo) (*InitializeApplicationResponse, error)
	SaveTransaction(context.Context, *TransactionInfo) (*emptypb.Empty, error)
	GetApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error)
	// protolint:disable:next MAX_LINE_LENGTH
	GetApplicationList(context.Context, *emptypb.Empty) (*GetApplicationListResponse, error)
	// protolint:disable:next MAX_LINE_LENGTH
	ArchiveApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error)
	EnableApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error)
	DisableApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error)
	// protolint:disable:next MAX_LINE_LENGTH
	GetApplicationListByAgentId(context.Context, *AgentIdRequest) (*GetApplicationListResponse, error)
}

// UnimplementedApplicationMonitoringServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationMonitoringServer struct {
}

func (*UnimplementedApplicationMonitoringServer) InitializeApplication(context.Context, *ApplicationInfo) (*InitializeApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitializeApplication not implemented")
}
func (*UnimplementedApplicationMonitoringServer) SaveTransaction(context.Context, *TransactionInfo) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveTransaction not implemented")
}
func (*UnimplementedApplicationMonitoringServer) GetApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApplicationById not implemented")
}
func (*UnimplementedApplicationMonitoringServer) GetApplicationList(context.Context, *emptypb.Empty) (*GetApplicationListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApplicationList not implemented")
}
func (*UnimplementedApplicationMonitoringServer) ArchiveApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveApplicationById not implemented")
}
func (*UnimplementedApplicationMonitoringServer) EnableApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableApplicationById not implemented")
}
func (*UnimplementedApplicationMonitoringServer) DisableApplicationById(context.Context, *ApplicationByIdReuqest) (*Application, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableApplicationById not implemented")
}
func (*UnimplementedApplicationMonitoringServer) GetApplicationListByAgentId(context.Context, *AgentIdRequest) (*GetApplicationListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApplicationListByAgentId not implemented")
}

func RegisterApplicationMonitoringServer(s *grpc.Server, srv ApplicationMonitoringServer) {
	s.RegisterService(&_ApplicationMonitoring_serviceDesc, srv)
}

func _ApplicationMonitoring_InitializeApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).InitializeApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/InitializeApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).InitializeApplication(ctx, req.(*ApplicationInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_SaveTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).SaveTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/SaveTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).SaveTransaction(ctx, req.(*TransactionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_GetApplicationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationByIdReuqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).GetApplicationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).GetApplicationById(ctx, req.(*ApplicationByIdReuqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_GetApplicationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).GetApplicationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).GetApplicationList(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_ArchiveApplicationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationByIdReuqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).ArchiveApplicationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/ArchiveApplicationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).ArchiveApplicationById(ctx, req.(*ApplicationByIdReuqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_EnableApplicationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationByIdReuqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).EnableApplicationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/EnableApplicationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).EnableApplicationById(ctx, req.(*ApplicationByIdReuqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_DisableApplicationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationByIdReuqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).DisableApplicationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/DisableApplicationById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).DisableApplicationById(ctx, req.(*ApplicationByIdReuqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationMonitoring_GetApplicationListByAgentId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationMonitoringServer).GetApplicationListByAgentId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.v1.monitoring.ApplicationMonitoring/GetApplicationListByAgentId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationMonitoringServer).GetApplicationListByAgentId(ctx, req.(*AgentIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationMonitoring_serviceDesc = grpc.ServiceDesc{
	ServiceName: "squzy.v1.monitoring.ApplicationMonitoring",
	HandlerType: (*ApplicationMonitoringServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitializeApplication",
			Handler:    _ApplicationMonitoring_InitializeApplication_Handler,
		},
		{
			MethodName: "SaveTransaction",
			Handler:    _ApplicationMonitoring_SaveTransaction_Handler,
		},
		{
			MethodName: "GetApplicationById",
			Handler:    _ApplicationMonitoring_GetApplicationById_Handler,
		},
		{
			MethodName: "GetApplicationList",
			Handler:    _ApplicationMonitoring_GetApplicationList_Handler,
		},
		{
			MethodName: "ArchiveApplicationById",
			Handler:    _ApplicationMonitoring_ArchiveApplicationById_Handler,
		},
		{
			MethodName: "EnableApplicationById",
			Handler:    _ApplicationMonitoring_EnableApplicationById_Handler,
		},
		{
			MethodName: "DisableApplicationById",
			Handler:    _ApplicationMonitoring_DisableApplicationById_Handler,
		},
		{
			MethodName: "GetApplicationListByAgentId",
			Handler:    _ApplicationMonitoring_GetApplicationListByAgentId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/squzy_application_monitoring.proto",
}
