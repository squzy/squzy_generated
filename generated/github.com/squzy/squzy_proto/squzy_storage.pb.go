// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: proto/v1/squzy_storage.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortIncidentList int32

const (
	SortIncidentList_SORT_INCIDENT_LIST_UNSPECIFIED SortIncidentList = 0
	SortIncidentList_INCIDENT_LIST_BY_START_TIME    SortIncidentList = 1
	SortIncidentList_INCIDENT_LIST_BY_END_TIME      SortIncidentList = 2
)

// Enum value maps for SortIncidentList.
var (
	SortIncidentList_name = map[int32]string{
		0: "SORT_INCIDENT_LIST_UNSPECIFIED",
		1: "INCIDENT_LIST_BY_START_TIME",
		2: "INCIDENT_LIST_BY_END_TIME",
	}
	SortIncidentList_value = map[string]int32{
		"SORT_INCIDENT_LIST_UNSPECIFIED": 0,
		"INCIDENT_LIST_BY_START_TIME":    1,
		"INCIDENT_LIST_BY_END_TIME":      2,
	}
)

func (x SortIncidentList) Enum() *SortIncidentList {
	p := new(SortIncidentList)
	*p = x
	return p
}

func (x SortIncidentList) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortIncidentList) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[0].Descriptor()
}

func (SortIncidentList) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[0]
}

func (x SortIncidentList) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortIncidentList.Descriptor instead.
func (SortIncidentList) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{0}
}

type SortTransactionList int32

const (
	SortTransactionList_SORT_TRANSACTION_LIST_UNSPECIFIED SortTransactionList = 0
	SortTransactionList_DURATION                          SortTransactionList = 1
	SortTransactionList_BY_TRANSACTION_START_TIME         SortTransactionList = 2
	SortTransactionList_BY_TRANSACTION_END_TIME           SortTransactionList = 3
)

// Enum value maps for SortTransactionList.
var (
	SortTransactionList_name = map[int32]string{
		0: "SORT_TRANSACTION_LIST_UNSPECIFIED",
		1: "DURATION",
		2: "BY_TRANSACTION_START_TIME",
		3: "BY_TRANSACTION_END_TIME",
	}
	SortTransactionList_value = map[string]int32{
		"SORT_TRANSACTION_LIST_UNSPECIFIED": 0,
		"DURATION":                          1,
		"BY_TRANSACTION_START_TIME":         2,
		"BY_TRANSACTION_END_TIME":           3,
	}
)

func (x SortTransactionList) Enum() *SortTransactionList {
	p := new(SortTransactionList)
	*p = x
	return p
}

func (x SortTransactionList) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortTransactionList) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[1].Descriptor()
}

func (SortTransactionList) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[1]
}

func (x SortTransactionList) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortTransactionList.Descriptor instead.
func (SortTransactionList) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{1}
}

type SortDirection int32

const (
	SortDirection_SORT_DIRECTION_UNSPECIFIED SortDirection = 0
	SortDirection_ASC                        SortDirection = 1
	SortDirection_DESC                       SortDirection = 2
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SORT_DIRECTION_UNSPECIFIED",
		1: "ASC",
		2: "DESC",
	}
	SortDirection_value = map[string]int32{
		"SORT_DIRECTION_UNSPECIFIED": 0,
		"ASC":                        1,
		"DESC":                       2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[2].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[2]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{2}
}

type SortSchedulerList int32

const (
	SortSchedulerList_SORT_SCHEDULER_LIST_UNSPECIFIED SortSchedulerList = 0
	SortSchedulerList_BY_START_TIME                   SortSchedulerList = 1
	SortSchedulerList_BY_END_TIME                     SortSchedulerList = 2
	SortSchedulerList_BY_LATENCY                      SortSchedulerList = 3
)

// Enum value maps for SortSchedulerList.
var (
	SortSchedulerList_name = map[int32]string{
		0: "SORT_SCHEDULER_LIST_UNSPECIFIED",
		1: "BY_START_TIME",
		2: "BY_END_TIME",
		3: "BY_LATENCY",
	}
	SortSchedulerList_value = map[string]int32{
		"SORT_SCHEDULER_LIST_UNSPECIFIED": 0,
		"BY_START_TIME":                   1,
		"BY_END_TIME":                     2,
		"BY_LATENCY":                      3,
	}
)

func (x SortSchedulerList) Enum() *SortSchedulerList {
	p := new(SortSchedulerList)
	*p = x
	return p
}

func (x SortSchedulerList) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortSchedulerList) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[3].Descriptor()
}

func (SortSchedulerList) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[3]
}

func (x SortSchedulerList) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortSchedulerList.Descriptor instead.
func (SortSchedulerList) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{3}
}

type GroupTransaction int32

const (
	GroupTransaction_GROUP_TRANSACTION_UNSPECIFIED GroupTransaction = 0
	GroupTransaction_BY_TYPE                       GroupTransaction = 1
	GroupTransaction_BY_NAME                       GroupTransaction = 2
	GroupTransaction_BY_METHOD                     GroupTransaction = 3
	GroupTransaction_BY_HOST                       GroupTransaction = 4
	GroupTransaction_BY_PATH                       GroupTransaction = 5
)

// Enum value maps for GroupTransaction.
var (
	GroupTransaction_name = map[int32]string{
		0: "GROUP_TRANSACTION_UNSPECIFIED",
		1: "BY_TYPE",
		2: "BY_NAME",
		3: "BY_METHOD",
		4: "BY_HOST",
		5: "BY_PATH",
	}
	GroupTransaction_value = map[string]int32{
		"GROUP_TRANSACTION_UNSPECIFIED": 0,
		"BY_TYPE":                       1,
		"BY_NAME":                       2,
		"BY_METHOD":                     3,
		"BY_HOST":                       4,
		"BY_PATH":                       5,
	}
)

func (x GroupTransaction) Enum() *GroupTransaction {
	p := new(GroupTransaction)
	*p = x
	return p
}

func (x GroupTransaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupTransaction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[4].Descriptor()
}

func (GroupTransaction) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[4]
}

func (x GroupTransaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupTransaction.Descriptor instead.
func (GroupTransaction) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{4}
}

type TypeAgentStat int32

const (
	TypeAgentStat_AGENT_STATS_TYPE_UNSPECIFIED TypeAgentStat = 0
	TypeAgentStat_ALL                          TypeAgentStat = 1
	TypeAgentStat_CPU                          TypeAgentStat = 2
	TypeAgentStat_DISK                         TypeAgentStat = 3
	TypeAgentStat_MEMORY                       TypeAgentStat = 4
	TypeAgentStat_NET                          TypeAgentStat = 5
)

// Enum value maps for TypeAgentStat.
var (
	TypeAgentStat_name = map[int32]string{
		0: "AGENT_STATS_TYPE_UNSPECIFIED",
		1: "ALL",
		2: "CPU",
		3: "DISK",
		4: "MEMORY",
		5: "NET",
	}
	TypeAgentStat_value = map[string]int32{
		"AGENT_STATS_TYPE_UNSPECIFIED": 0,
		"ALL":                          1,
		"CPU":                          2,
		"DISK":                         3,
		"MEMORY":                       4,
		"NET":                          5,
	}
)

func (x TypeAgentStat) Enum() *TypeAgentStat {
	p := new(TypeAgentStat)
	*p = x
	return p
}

func (x TypeAgentStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeAgentStat) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_storage_proto_enumTypes[5].Descriptor()
}

func (TypeAgentStat) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_storage_proto_enumTypes[5]
}

func (x TypeAgentStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeAgentStat.Descriptor instead.
func (TypeAgentStat) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{5}
}

type UpdateIncidentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncidentId string         `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
	Status     IncidentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=squzy.v1.incident.IncidentStatus" json:"status,omitempty"`
}

func (x *UpdateIncidentStatusRequest) Reset() {
	*x = UpdateIncidentStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIncidentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIncidentStatusRequest) ProtoMessage() {}

func (x *UpdateIncidentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIncidentStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateIncidentStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateIncidentStatusRequest) GetIncidentId() string {
	if x != nil {
		return x.IncidentId
	}
	return ""
}

func (x *UpdateIncidentStatusRequest) GetStatus() IncidentStatus {
	if x != nil {
		return x.Status
	}
	return IncidentStatus_INCIDENT_STATUS_UNSPECIFIED
}

type SortingIncidentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy    SortIncidentList `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3,enum=squzy.v1.storage.SortIncidentList" json:"sort_by,omitempty"`
	Direction SortDirection    `protobuf:"varint,2,opt,name=direction,proto3,enum=squzy.v1.storage.SortDirection" json:"direction,omitempty"`
}

func (x *SortingIncidentList) Reset() {
	*x = SortingIncidentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingIncidentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingIncidentList) ProtoMessage() {}

func (x *SortingIncidentList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingIncidentList.ProtoReflect.Descriptor instead.
func (*SortingIncidentList) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{1}
}

func (x *SortingIncidentList) GetSortBy() SortIncidentList {
	if x != nil {
		return x.SortBy
	}
	return SortIncidentList_SORT_INCIDENT_LIST_UNSPECIFIED
}

func (x *SortingIncidentList) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

type GetIncidentsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     IncidentStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=squzy.v1.incident.IncidentStatus" json:"status,omitempty"`
	RuleId     *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Pagination *Pagination             `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	TimeRange  *TimeFilter             `protobuf:"bytes,4,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Sort       *SortingIncidentList    `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *GetIncidentsListRequest) Reset() {
	*x = GetIncidentsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncidentsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncidentsListRequest) ProtoMessage() {}

func (x *GetIncidentsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncidentsListRequest.ProtoReflect.Descriptor instead.
func (*GetIncidentsListRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{2}
}

func (x *GetIncidentsListRequest) GetStatus() IncidentStatus {
	if x != nil {
		return x.Status
	}
	return IncidentStatus_INCIDENT_STATUS_UNSPECIFIED
}

func (x *GetIncidentsListRequest) GetRuleId() *wrapperspb.StringValue {
	if x != nil {
		return x.RuleId
	}
	return nil
}

func (x *GetIncidentsListRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetIncidentsListRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetIncidentsListRequest) GetSort() *SortingIncidentList {
	if x != nil {
		return x.Sort
	}
	return nil
}

type GetIncidentsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Incidents []*Incident `protobuf:"bytes,2,rep,name=incidents,proto3" json:"incidents,omitempty"`
}

func (x *GetIncidentsListResponse) Reset() {
	*x = GetIncidentsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncidentsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncidentsListResponse) ProtoMessage() {}

func (x *GetIncidentsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncidentsListResponse.ProtoReflect.Descriptor instead.
func (*GetIncidentsListResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{3}
}

func (x *GetIncidentsListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetIncidentsListResponse) GetIncidents() []*Incident {
	if x != nil {
		return x.Incidents
	}
	return nil
}

type GetSchedulerUptimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchedulerId string      `protobuf:"bytes,1,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	TimeRange   *TimeFilter `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
}

func (x *GetSchedulerUptimeRequest) Reset() {
	*x = GetSchedulerUptimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchedulerUptimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerUptimeRequest) ProtoMessage() {}

func (x *GetSchedulerUptimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerUptimeRequest.ProtoReflect.Descriptor instead.
func (*GetSchedulerUptimeRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{4}
}

func (x *GetSchedulerUptimeRequest) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *GetSchedulerUptimeRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GetSchedulerUptimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uptime  float64 `protobuf:"fixed64,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Latency float64 `protobuf:"fixed64,2,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *GetSchedulerUptimeResponse) Reset() {
	*x = GetSchedulerUptimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchedulerUptimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerUptimeResponse) ProtoMessage() {}

func (x *GetSchedulerUptimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerUptimeResponse.ProtoReflect.Descriptor instead.
func (*GetSchedulerUptimeResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{5}
}

func (x *GetSchedulerUptimeResponse) GetUptime() float64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GetSchedulerUptimeResponse) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

type GetTransactionByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *TransactionInfo   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Children    []*TransactionInfo `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GetTransactionByIdResponse) Reset() {
	*x = GetTransactionByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIdResponse) ProtoMessage() {}

func (x *GetTransactionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{6}
}

func (x *GetTransactionByIdResponse) GetTransaction() *TransactionInfo {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *GetTransactionByIdResponse) GetChildren() []*TransactionInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetTransactionByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId   string      `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	TransactionName string      `protobuf:"bytes,2,opt,name=transaction_name,json=transactionName,proto3" json:"transaction_name,omitempty"`
	Pagination      *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	TimeRange       *TimeFilter `protobuf:"bytes,4,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
}

func (x *GetTransactionByNameRequest) Reset() {
	*x = GetTransactionByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByNameRequest) ProtoMessage() {}

func (x *GetTransactionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionByNameRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetTransactionByNameRequest) GetTransactionName() string {
	if x != nil {
		return x.TransactionName
	}
	return ""
}

func (x *GetTransactionByNameRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTransactionByNameRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GetTransactionByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int64              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Transactions []*TransactionInfo `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetTransactionByNameResponse) Reset() {
	*x = GetTransactionByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByNameResponse) ProtoMessage() {}

func (x *GetTransactionByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByNameResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionByNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionByNameResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTransactionByNameResponse) GetTransactions() []*TransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetTransactionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetTransactionByIdRequest) Reset() {
	*x = GetTransactionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIdRequest) ProtoMessage() {}

func (x *GetTransactionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionByIdRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int64              `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Transactions []*TransactionInfo `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTransactionsResponse) GetTransactions() []*TransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string            `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"` // if empty then ignore
	Pagination    *Pagination       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	TimeRange     *TimeFilter       `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Type          TransactionType   `protobuf:"varint,4,opt,name=type,proto3,enum=squzy.v1.monitoring.TransactionType" json:"type,omitempty"`
	Status        TransactionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=squzy.v1.monitoring.TransactionStatus" json:"status,omitempty"`
	// filter is not exists
	Host   *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Name   *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Path   *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	Method *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=method,proto3" json:"method,omitempty"`
	Sort   *SortingTransactionList `protobuf:"bytes,10,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetTransactionsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTransactionsRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetTransactionsRequest) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *GetTransactionsRequest) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_CODE_UNSPECIFIED
}

func (x *GetTransactionsRequest) GetHost() *wrapperspb.StringValue {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *GetTransactionsRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetTransactionsRequest) GetPath() *wrapperspb.StringValue {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *GetTransactionsRequest) GetMethod() *wrapperspb.StringValue {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *GetTransactionsRequest) GetSort() *SortingTransactionList {
	if x != nil {
		return x.Sort
	}
	return nil
}

type SortingTransactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy    SortTransactionList `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3,enum=squzy.v1.storage.SortTransactionList" json:"sort_by,omitempty"`
	Direction SortDirection       `protobuf:"varint,2,opt,name=direction,proto3,enum=squzy.v1.storage.SortDirection" json:"direction,omitempty"`
}

func (x *SortingTransactionList) Reset() {
	*x = SortingTransactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingTransactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingTransactionList) ProtoMessage() {}

func (x *SortingTransactionList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingTransactionList.ProtoReflect.Descriptor instead.
func (*SortingTransactionList) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{12}
}

func (x *SortingTransactionList) GetSortBy() SortTransactionList {
	if x != nil {
		return x.SortBy
	}
	return SortTransactionList_SORT_TRANSACTION_LIST_UNSPECIFIED
}

func (x *SortingTransactionList) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

type GetTransactionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string            `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	TimeRange     *TimeFilter       `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`                                         // nil not set (filter by start time)
	GroupType     GroupTransaction  `protobuf:"varint,3,opt,name=group_type,json=groupType,proto3,enum=squzy.v1.storage.GroupTransaction" json:"group_type,omitempty"` // how we will group transactions
	Type          TransactionType   `protobuf:"varint,4,opt,name=type,proto3,enum=squzy.v1.monitoring.TransactionType" json:"type,omitempty"`
	Status        TransactionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=squzy.v1.monitoring.TransactionStatus" json:"status,omitempty"`
}

func (x *GetTransactionGroupRequest) Reset() {
	*x = GetTransactionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionGroupRequest) ProtoMessage() {}

func (x *GetTransactionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionGroupRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{13}
}

func (x *GetTransactionGroupRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetTransactionGroupRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetTransactionGroupRequest) GetGroupType() GroupTransaction {
	if x != nil {
		return x.GroupType
	}
	return GroupTransaction_GROUP_TRANSACTION_UNSPECIFIED
}

func (x *GetTransactionGroupRequest) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *GetTransactionGroupRequest) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_CODE_UNSPECIFIED
}

type TransactionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	AverageTime  float64 `protobuf:"fixed64,2,opt,name=average_time,json=averageTime,proto3" json:"average_time,omitempty"`
	SuccessRatio float64 `protobuf:"fixed64,3,opt,name=success_ratio,json=successRatio,proto3" json:"success_ratio,omitempty"`
	MinTime      float64 `protobuf:"fixed64,4,opt,name=min_time,json=minTime,proto3" json:"min_time,omitempty"`
	MaxTime      float64 `protobuf:"fixed64,5,opt,name=max_time,json=maxTime,proto3" json:"max_time,omitempty"`
	Throughput   float64 `protobuf:"fixed64,6,opt,name=throughput,proto3" json:"throughput,omitempty"`
}

func (x *TransactionGroup) Reset() {
	*x = TransactionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGroup) ProtoMessage() {}

func (x *TransactionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGroup.ProtoReflect.Descriptor instead.
func (*TransactionGroup) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionGroup) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TransactionGroup) GetAverageTime() float64 {
	if x != nil {
		return x.AverageTime
	}
	return 0
}

func (x *TransactionGroup) GetSuccessRatio() float64 {
	if x != nil {
		return x.SuccessRatio
	}
	return 0
}

func (x *TransactionGroup) GetMinTime() float64 {
	if x != nil {
		return x.MinTime
	}
	return 0
}

func (x *TransactionGroup) GetMaxTime() float64 {
	if x != nil {
		return x.MaxTime
	}
	return 0
}

func (x *TransactionGroup) GetThroughput() float64 {
	if x != nil {
		return x.Throughput
	}
	return 0
}

type GetTransactionGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions map[string]*TransactionGroup `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetTransactionGroupResponse) Reset() {
	*x = GetTransactionGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionGroupResponse) ProtoMessage() {}

func (x *GetTransactionGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionGroupResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{15}
}

func (x *GetTransactionGroupResponse) GetTransactions() map[string]*TransactionGroup {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type SchedulerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchedulerId string             `protobuf:"bytes,1,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Snapshot    *SchedulerSnapshot `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *SchedulerResponse) Reset() {
	*x = SchedulerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerResponse) ProtoMessage() {}

func (x *SchedulerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerResponse.ProtoReflect.Descriptor instead.
func (*SchedulerResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{16}
}

func (x *SchedulerResponse) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *SchedulerResponse) GetSnapshot() *SchedulerSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type TimeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // nil = not set start time
	To   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // nil = not set end time
}

func (x *TimeFilter) Reset() {
	*x = TimeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeFilter) ProtoMessage() {}

func (x *TimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeFilter.ProtoReflect.Descriptor instead.
func (*TimeFilter) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{17}
}

func (x *TimeFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TimeFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // default 0
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // default 20
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{18}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SortingSchedulerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy    SortSchedulerList `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3,enum=squzy.v1.storage.SortSchedulerList" json:"sort_by,omitempty"`
	Direction SortDirection     `protobuf:"varint,2,opt,name=direction,proto3,enum=squzy.v1.storage.SortDirection" json:"direction,omitempty"`
}

func (x *SortingSchedulerList) Reset() {
	*x = SortingSchedulerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingSchedulerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingSchedulerList) ProtoMessage() {}

func (x *SortingSchedulerList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingSchedulerList.ProtoReflect.Descriptor instead.
func (*SortingSchedulerList) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{19}
}

func (x *SortingSchedulerList) GetSortBy() SortSchedulerList {
	if x != nil {
		return x.SortBy
	}
	return SortSchedulerList_SORT_SCHEDULER_LIST_UNSPECIFIED
}

func (x *SortingSchedulerList) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

type GetSchedulerInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchedulerId string                `protobuf:"bytes,1,opt,name=scheduler_id,json=schedulerId,proto3" json:"scheduler_id,omitempty"`
	Pagination  *Pagination           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`                                 // if nil means all record
	TimeRange   *TimeFilter           `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`                  // nil not set (filter by start time)
	Sort        *SortingSchedulerList `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`                                             // sort for table
	Status      SchedulerCode         `protobuf:"varint,5,opt,name=status,proto3,enum=squzy.v1.monitoring.SchedulerCode" json:"status,omitempty"` // filter for table
}

func (x *GetSchedulerInformationRequest) Reset() {
	*x = GetSchedulerInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchedulerInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerInformationRequest) ProtoMessage() {}

func (x *GetSchedulerInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerInformationRequest.ProtoReflect.Descriptor instead.
func (*GetSchedulerInformationRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{20}
}

func (x *GetSchedulerInformationRequest) GetSchedulerId() string {
	if x != nil {
		return x.SchedulerId
	}
	return ""
}

func (x *GetSchedulerInformationRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetSchedulerInformationRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetSchedulerInformationRequest) GetSort() *SortingSchedulerList {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *GetSchedulerInformationRequest) GetStatus() SchedulerCode {
	if x != nil {
		return x.Status
	}
	return SchedulerCode_SCHEDULER_CODE_UNSPECIFIED
}

type GetSchedulerInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*SchedulerSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	Count     int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetSchedulerInformationResponse) Reset() {
	*x = GetSchedulerInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchedulerInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerInformationResponse) ProtoMessage() {}

func (x *GetSchedulerInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerInformationResponse.ProtoReflect.Descriptor instead.
func (*GetSchedulerInformationResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{21}
}

func (x *GetSchedulerInformationResponse) GetSnapshots() []*SchedulerSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *GetSchedulerInformationResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAgentInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    string        `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Type       TypeAgentStat `protobuf:"varint,2,opt,name=type,proto3,enum=squzy.v1.storage.TypeAgentStat" json:"type,omitempty"`
	Pagination *Pagination   `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`                // nil no pagination
	TimeRange  *TimeFilter   `protobuf:"bytes,4,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"` // nil not set (filter by timestamp)
}

func (x *GetAgentInformationRequest) Reset() {
	*x = GetAgentInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentInformationRequest) ProtoMessage() {}

func (x *GetAgentInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentInformationRequest.ProtoReflect.Descriptor instead.
func (*GetAgentInformationRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{22}
}

func (x *GetAgentInformationRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetAgentInformationRequest) GetType() TypeAgentStat {
	if x != nil {
		return x.Type
	}
	return TypeAgentStat_AGENT_STATS_TYPE_UNSPECIFIED
}

func (x *GetAgentInformationRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAgentInformationRequest) GetTimeRange() *TimeFilter {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GetAgentInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats []*GetAgentInformationResponse_Statistic `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Count int32                                    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAgentInformationResponse) Reset() {
	*x = GetAgentInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentInformationResponse) ProtoMessage() {}

func (x *GetAgentInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentInformationResponse.ProtoReflect.Descriptor instead.
func (*GetAgentInformationResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{23}
}

func (x *GetAgentInformationResponse) GetStats() []*GetAgentInformationResponse_Statistic {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetAgentInformationResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAgentInformationResponse_Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	CpuInfo    *CpuInfo               `protobuf:"bytes,2,opt,name=cpu_info,json=cpuInfo,proto3" json:"cpu_info,omitempty"`
	MemoryInfo *MemoryInfo            `protobuf:"bytes,3,opt,name=memory_info,json=memoryInfo,proto3" json:"memory_info,omitempty"`
	DiskInfo   *DiskInfo              `protobuf:"bytes,4,opt,name=disk_info,json=diskInfo,proto3" json:"disk_info,omitempty"`
	NetInfo    *NetInfo               `protobuf:"bytes,5,opt,name=net_info,json=netInfo,proto3" json:"net_info,omitempty"`
}

func (x *GetAgentInformationResponse_Statistic) Reset() {
	*x = GetAgentInformationResponse_Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_storage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentInformationResponse_Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentInformationResponse_Statistic) ProtoMessage() {}

func (x *GetAgentInformationResponse_Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_storage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentInformationResponse_Statistic.ProtoReflect.Descriptor instead.
func (*GetAgentInformationResponse_Statistic) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_storage_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetAgentInformationResponse_Statistic) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *GetAgentInformationResponse_Statistic) GetCpuInfo() *CpuInfo {
	if x != nil {
		return x.CpuInfo
	}
	return nil
}

func (x *GetAgentInformationResponse_Statistic) GetMemoryInfo() *MemoryInfo {
	if x != nil {
		return x.MemoryInfo
	}
	return nil
}

func (x *GetAgentInformationResponse_Statistic) GetDiskInfo() *DiskInfo {
	if x != nil {
		return x.DiskInfo
	}
	return nil
}

func (x *GetAgentInformationResponse_Statistic) GetNetInfo() *NetInfo {
	if x != nil {
		return x.NetInfo
	}
	return nil
}

var File_proto_v1_squzy_storage_proto protoreflect.FileDescriptor

var file_proto_v1_squzy_storage_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x71,
	0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x69, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x71,
	0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xea, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x42, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbe, 0x04, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71,
	0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x53, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xbd, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x63, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x22, 0x68, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x7d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xe7, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9c, 0x03, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x97, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x70, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x35, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x76, 0x0a, 0x10, 0x53, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x1e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x02, 0x2a, 0x86, 0x01, 0x0a, 0x13, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x4f,
	0x52, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x42, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x42, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0d, 0x53,
	0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x2a,
	0x6c, 0x0a, 0x11, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x59, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x42, 0x59, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x03, 0x2a, 0x78, 0x0a,
	0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x59, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x59,
	0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x05, 0x2a, 0x62, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x49, 0x53, 0x4b, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59,
	0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x54, 0x10, 0x05, 0x32, 0xf0, 0x0a, 0x0a, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x19, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x47, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0f, 0x53, 0x61,
	0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7e, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x55, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x71,
	0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x69, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24,
	0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_squzy_storage_proto_rawDescOnce sync.Once
	file_proto_v1_squzy_storage_proto_rawDescData = file_proto_v1_squzy_storage_proto_rawDesc
)

func file_proto_v1_squzy_storage_proto_rawDescGZIP() []byte {
	file_proto_v1_squzy_storage_proto_rawDescOnce.Do(func() {
		file_proto_v1_squzy_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_squzy_storage_proto_rawDescData)
	})
	return file_proto_v1_squzy_storage_proto_rawDescData
}

var file_proto_v1_squzy_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_v1_squzy_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_v1_squzy_storage_proto_goTypes = []interface{}{
	(SortIncidentList)(0),                         // 0: squzy.v1.storage.SortIncidentList
	(SortTransactionList)(0),                      // 1: squzy.v1.storage.SortTransactionList
	(SortDirection)(0),                            // 2: squzy.v1.storage.SortDirection
	(SortSchedulerList)(0),                        // 3: squzy.v1.storage.SortSchedulerList
	(GroupTransaction)(0),                         // 4: squzy.v1.storage.GroupTransaction
	(TypeAgentStat)(0),                            // 5: squzy.v1.storage.TypeAgentStat
	(*UpdateIncidentStatusRequest)(nil),           // 6: squzy.v1.storage.UpdateIncidentStatusRequest
	(*SortingIncidentList)(nil),                   // 7: squzy.v1.storage.SortingIncidentList
	(*GetIncidentsListRequest)(nil),               // 8: squzy.v1.storage.GetIncidentsListRequest
	(*GetIncidentsListResponse)(nil),              // 9: squzy.v1.storage.GetIncidentsListResponse
	(*GetSchedulerUptimeRequest)(nil),             // 10: squzy.v1.storage.GetSchedulerUptimeRequest
	(*GetSchedulerUptimeResponse)(nil),            // 11: squzy.v1.storage.GetSchedulerUptimeResponse
	(*GetTransactionByIdResponse)(nil),            // 12: squzy.v1.storage.GetTransactionByIdResponse
	(*GetTransactionByNameRequest)(nil),           // 13: squzy.v1.storage.GetTransactionByNameRequest
	(*GetTransactionByNameResponse)(nil),          // 14: squzy.v1.storage.GetTransactionByNameResponse
	(*GetTransactionByIdRequest)(nil),             // 15: squzy.v1.storage.GetTransactionByIdRequest
	(*GetTransactionsResponse)(nil),               // 16: squzy.v1.storage.GetTransactionsResponse
	(*GetTransactionsRequest)(nil),                // 17: squzy.v1.storage.GetTransactionsRequest
	(*SortingTransactionList)(nil),                // 18: squzy.v1.storage.SortingTransactionList
	(*GetTransactionGroupRequest)(nil),            // 19: squzy.v1.storage.GetTransactionGroupRequest
	(*TransactionGroup)(nil),                      // 20: squzy.v1.storage.TransactionGroup
	(*GetTransactionGroupResponse)(nil),           // 21: squzy.v1.storage.GetTransactionGroupResponse
	(*SchedulerResponse)(nil),                     // 22: squzy.v1.storage.SchedulerResponse
	(*TimeFilter)(nil),                            // 23: squzy.v1.storage.TimeFilter
	(*Pagination)(nil),                            // 24: squzy.v1.storage.Pagination
	(*SortingSchedulerList)(nil),                  // 25: squzy.v1.storage.SortingSchedulerList
	(*GetSchedulerInformationRequest)(nil),        // 26: squzy.v1.storage.GetSchedulerInformationRequest
	(*GetSchedulerInformationResponse)(nil),       // 27: squzy.v1.storage.GetSchedulerInformationResponse
	(*GetAgentInformationRequest)(nil),            // 28: squzy.v1.storage.GetAgentInformationRequest
	(*GetAgentInformationResponse)(nil),           // 29: squzy.v1.storage.GetAgentInformationResponse
	nil,                                           // 30: squzy.v1.storage.GetTransactionGroupResponse.TransactionsEntry
	(*GetAgentInformationResponse_Statistic)(nil), // 31: squzy.v1.storage.GetAgentInformationResponse.Statistic
	(IncidentStatus)(0),                           // 32: squzy.v1.incident.IncidentStatus
	(*wrapperspb.StringValue)(nil),                // 33: google.protobuf.StringValue
	(*Incident)(nil),                              // 34: squzy.v1.incident.Incident
	(*TransactionInfo)(nil),                       // 35: squzy.v1.monitoring.TransactionInfo
	(TransactionType)(0),                          // 36: squzy.v1.monitoring.TransactionType
	(TransactionStatus)(0),                        // 37: squzy.v1.monitoring.TransactionStatus
	(*SchedulerSnapshot)(nil),                     // 38: squzy.v1.monitoring.SchedulerSnapshot
	(*timestamppb.Timestamp)(nil),                 // 39: google.protobuf.Timestamp
	(SchedulerCode)(0),                            // 40: squzy.v1.monitoring.SchedulerCode
	(*CpuInfo)(nil),                               // 41: squzy.v1.agent.CpuInfo
	(*MemoryInfo)(nil),                            // 42: squzy.v1.agent.MemoryInfo
	(*DiskInfo)(nil),                              // 43: squzy.v1.agent.DiskInfo
	(*NetInfo)(nil),                               // 44: squzy.v1.agent.NetInfo
	(*Metric)(nil),                                // 45: squzy.v1.agent.Metric
	(*IncidentIdRequest)(nil),                     // 46: squzy.v1.incident.IncidentIdRequest
	(*RuleIdRequest)(nil),                         // 47: squzy.v1.incident.RuleIdRequest
	(*emptypb.Empty)(nil),                         // 48: google.protobuf.Empty
}
var file_proto_v1_squzy_storage_proto_depIdxs = []int32{
	32, // 0: squzy.v1.storage.UpdateIncidentStatusRequest.status:type_name -> squzy.v1.incident.IncidentStatus
	0,  // 1: squzy.v1.storage.SortingIncidentList.sort_by:type_name -> squzy.v1.storage.SortIncidentList
	2,  // 2: squzy.v1.storage.SortingIncidentList.direction:type_name -> squzy.v1.storage.SortDirection
	32, // 3: squzy.v1.storage.GetIncidentsListRequest.status:type_name -> squzy.v1.incident.IncidentStatus
	33, // 4: squzy.v1.storage.GetIncidentsListRequest.rule_id:type_name -> google.protobuf.StringValue
	24, // 5: squzy.v1.storage.GetIncidentsListRequest.pagination:type_name -> squzy.v1.storage.Pagination
	23, // 6: squzy.v1.storage.GetIncidentsListRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	7,  // 7: squzy.v1.storage.GetIncidentsListRequest.sort:type_name -> squzy.v1.storage.SortingIncidentList
	34, // 8: squzy.v1.storage.GetIncidentsListResponse.incidents:type_name -> squzy.v1.incident.Incident
	23, // 9: squzy.v1.storage.GetSchedulerUptimeRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	35, // 10: squzy.v1.storage.GetTransactionByIdResponse.transaction:type_name -> squzy.v1.monitoring.TransactionInfo
	35, // 11: squzy.v1.storage.GetTransactionByIdResponse.children:type_name -> squzy.v1.monitoring.TransactionInfo
	24, // 12: squzy.v1.storage.GetTransactionByNameRequest.pagination:type_name -> squzy.v1.storage.Pagination
	23, // 13: squzy.v1.storage.GetTransactionByNameRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	35, // 14: squzy.v1.storage.GetTransactionByNameResponse.transactions:type_name -> squzy.v1.monitoring.TransactionInfo
	35, // 15: squzy.v1.storage.GetTransactionsResponse.transactions:type_name -> squzy.v1.monitoring.TransactionInfo
	24, // 16: squzy.v1.storage.GetTransactionsRequest.pagination:type_name -> squzy.v1.storage.Pagination
	23, // 17: squzy.v1.storage.GetTransactionsRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	36, // 18: squzy.v1.storage.GetTransactionsRequest.type:type_name -> squzy.v1.monitoring.TransactionType
	37, // 19: squzy.v1.storage.GetTransactionsRequest.status:type_name -> squzy.v1.monitoring.TransactionStatus
	33, // 20: squzy.v1.storage.GetTransactionsRequest.host:type_name -> google.protobuf.StringValue
	33, // 21: squzy.v1.storage.GetTransactionsRequest.name:type_name -> google.protobuf.StringValue
	33, // 22: squzy.v1.storage.GetTransactionsRequest.path:type_name -> google.protobuf.StringValue
	33, // 23: squzy.v1.storage.GetTransactionsRequest.method:type_name -> google.protobuf.StringValue
	18, // 24: squzy.v1.storage.GetTransactionsRequest.sort:type_name -> squzy.v1.storage.SortingTransactionList
	1,  // 25: squzy.v1.storage.SortingTransactionList.sort_by:type_name -> squzy.v1.storage.SortTransactionList
	2,  // 26: squzy.v1.storage.SortingTransactionList.direction:type_name -> squzy.v1.storage.SortDirection
	23, // 27: squzy.v1.storage.GetTransactionGroupRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	4,  // 28: squzy.v1.storage.GetTransactionGroupRequest.group_type:type_name -> squzy.v1.storage.GroupTransaction
	36, // 29: squzy.v1.storage.GetTransactionGroupRequest.type:type_name -> squzy.v1.monitoring.TransactionType
	37, // 30: squzy.v1.storage.GetTransactionGroupRequest.status:type_name -> squzy.v1.monitoring.TransactionStatus
	30, // 31: squzy.v1.storage.GetTransactionGroupResponse.transactions:type_name -> squzy.v1.storage.GetTransactionGroupResponse.TransactionsEntry
	38, // 32: squzy.v1.storage.SchedulerResponse.snapshot:type_name -> squzy.v1.monitoring.SchedulerSnapshot
	39, // 33: squzy.v1.storage.TimeFilter.from:type_name -> google.protobuf.Timestamp
	39, // 34: squzy.v1.storage.TimeFilter.to:type_name -> google.protobuf.Timestamp
	3,  // 35: squzy.v1.storage.SortingSchedulerList.sort_by:type_name -> squzy.v1.storage.SortSchedulerList
	2,  // 36: squzy.v1.storage.SortingSchedulerList.direction:type_name -> squzy.v1.storage.SortDirection
	24, // 37: squzy.v1.storage.GetSchedulerInformationRequest.pagination:type_name -> squzy.v1.storage.Pagination
	23, // 38: squzy.v1.storage.GetSchedulerInformationRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	25, // 39: squzy.v1.storage.GetSchedulerInformationRequest.sort:type_name -> squzy.v1.storage.SortingSchedulerList
	40, // 40: squzy.v1.storage.GetSchedulerInformationRequest.status:type_name -> squzy.v1.monitoring.SchedulerCode
	38, // 41: squzy.v1.storage.GetSchedulerInformationResponse.snapshots:type_name -> squzy.v1.monitoring.SchedulerSnapshot
	5,  // 42: squzy.v1.storage.GetAgentInformationRequest.type:type_name -> squzy.v1.storage.TypeAgentStat
	24, // 43: squzy.v1.storage.GetAgentInformationRequest.pagination:type_name -> squzy.v1.storage.Pagination
	23, // 44: squzy.v1.storage.GetAgentInformationRequest.time_range:type_name -> squzy.v1.storage.TimeFilter
	31, // 45: squzy.v1.storage.GetAgentInformationResponse.stats:type_name -> squzy.v1.storage.GetAgentInformationResponse.Statistic
	20, // 46: squzy.v1.storage.GetTransactionGroupResponse.TransactionsEntry.value:type_name -> squzy.v1.storage.TransactionGroup
	39, // 47: squzy.v1.storage.GetAgentInformationResponse.Statistic.time:type_name -> google.protobuf.Timestamp
	41, // 48: squzy.v1.storage.GetAgentInformationResponse.Statistic.cpu_info:type_name -> squzy.v1.agent.CpuInfo
	42, // 49: squzy.v1.storage.GetAgentInformationResponse.Statistic.memory_info:type_name -> squzy.v1.agent.MemoryInfo
	43, // 50: squzy.v1.storage.GetAgentInformationResponse.Statistic.disk_info:type_name -> squzy.v1.agent.DiskInfo
	44, // 51: squzy.v1.storage.GetAgentInformationResponse.Statistic.net_info:type_name -> squzy.v1.agent.NetInfo
	22, // 52: squzy.v1.storage.Storage.SaveResponseFromScheduler:input_type -> squzy.v1.storage.SchedulerResponse
	45, // 53: squzy.v1.storage.Storage.SaveResponseFromAgent:input_type -> squzy.v1.agent.Metric
	35, // 54: squzy.v1.storage.Storage.SaveTransaction:input_type -> squzy.v1.monitoring.TransactionInfo
	26, // 55: squzy.v1.storage.Storage.GetSchedulerInformation:input_type -> squzy.v1.storage.GetSchedulerInformationRequest
	10, // 56: squzy.v1.storage.Storage.GetSchedulerUptime:input_type -> squzy.v1.storage.GetSchedulerUptimeRequest
	28, // 57: squzy.v1.storage.Storage.GetAgentInformation:input_type -> squzy.v1.storage.GetAgentInformationRequest
	19, // 58: squzy.v1.storage.Storage.GetTransactionsGroup:input_type -> squzy.v1.storage.GetTransactionGroupRequest
	17, // 59: squzy.v1.storage.Storage.GetTransactions:input_type -> squzy.v1.storage.GetTransactionsRequest
	15, // 60: squzy.v1.storage.Storage.GetTransactionById:input_type -> squzy.v1.storage.GetTransactionByIdRequest
	34, // 61: squzy.v1.storage.Storage.SaveIncident:input_type -> squzy.v1.incident.Incident
	6,  // 62: squzy.v1.storage.Storage.UpdateIncidentStatus:input_type -> squzy.v1.storage.UpdateIncidentStatusRequest
	46, // 63: squzy.v1.storage.Storage.GetIncidentById:input_type -> squzy.v1.incident.IncidentIdRequest
	47, // 64: squzy.v1.storage.Storage.GetIncidentByRuleId:input_type -> squzy.v1.incident.RuleIdRequest
	8,  // 65: squzy.v1.storage.Storage.GetIncidentsList:input_type -> squzy.v1.storage.GetIncidentsListRequest
	48, // 66: squzy.v1.storage.Storage.SaveResponseFromScheduler:output_type -> google.protobuf.Empty
	48, // 67: squzy.v1.storage.Storage.SaveResponseFromAgent:output_type -> google.protobuf.Empty
	48, // 68: squzy.v1.storage.Storage.SaveTransaction:output_type -> google.protobuf.Empty
	27, // 69: squzy.v1.storage.Storage.GetSchedulerInformation:output_type -> squzy.v1.storage.GetSchedulerInformationResponse
	11, // 70: squzy.v1.storage.Storage.GetSchedulerUptime:output_type -> squzy.v1.storage.GetSchedulerUptimeResponse
	29, // 71: squzy.v1.storage.Storage.GetAgentInformation:output_type -> squzy.v1.storage.GetAgentInformationResponse
	21, // 72: squzy.v1.storage.Storage.GetTransactionsGroup:output_type -> squzy.v1.storage.GetTransactionGroupResponse
	16, // 73: squzy.v1.storage.Storage.GetTransactions:output_type -> squzy.v1.storage.GetTransactionsResponse
	12, // 74: squzy.v1.storage.Storage.GetTransactionById:output_type -> squzy.v1.storage.GetTransactionByIdResponse
	48, // 75: squzy.v1.storage.Storage.SaveIncident:output_type -> google.protobuf.Empty
	34, // 76: squzy.v1.storage.Storage.UpdateIncidentStatus:output_type -> squzy.v1.incident.Incident
	34, // 77: squzy.v1.storage.Storage.GetIncidentById:output_type -> squzy.v1.incident.Incident
	34, // 78: squzy.v1.storage.Storage.GetIncidentByRuleId:output_type -> squzy.v1.incident.Incident
	9,  // 79: squzy.v1.storage.Storage.GetIncidentsList:output_type -> squzy.v1.storage.GetIncidentsListResponse
	66, // [66:80] is the sub-list for method output_type
	52, // [52:66] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_proto_v1_squzy_storage_proto_init() }
func file_proto_v1_squzy_storage_proto_init() {
	if File_proto_v1_squzy_storage_proto != nil {
		return
	}
	file_proto_v1_squzy_agent_server_proto_init()
	file_proto_v1_squzy_application_monitoring_proto_init()
	file_proto_v1_squzy_incident_server_proto_init()
	file_proto_v1_squzy_monitoring_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_squzy_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIncidentStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingIncidentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncidentsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncidentsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchedulerUptimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchedulerUptimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingTransactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingSchedulerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchedulerInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchedulerInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_storage_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentInformationResponse_Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_squzy_storage_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_squzy_storage_proto_goTypes,
		DependencyIndexes: file_proto_v1_squzy_storage_proto_depIdxs,
		EnumInfos:         file_proto_v1_squzy_storage_proto_enumTypes,
		MessageInfos:      file_proto_v1_squzy_storage_proto_msgTypes,
	}.Build()
	File_proto_v1_squzy_storage_proto = out.File
	file_proto_v1_squzy_storage_proto_rawDesc = nil
	file_proto_v1_squzy_storage_proto_goTypes = nil
	file_proto_v1_squzy_storage_proto_depIdxs = nil
}
