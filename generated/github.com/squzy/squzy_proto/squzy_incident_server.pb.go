// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: proto/v1/squzy_incident_server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IncidentStatus int32

const (
	IncidentStatus_INCIDENT_STATUS_UNSPECIFIED   IncidentStatus = 0
	IncidentStatus_INCIDENT_STATUS_OPENED        IncidentStatus = 1
	IncidentStatus_INCIDENT_STATUS_STUDIED       IncidentStatus = 2
	IncidentStatus_INCIDENT_STATUS_CAN_BE_CLOSED IncidentStatus = 3
	IncidentStatus_INCIDENT_STATUS_CLOSED        IncidentStatus = 4
)

// Enum value maps for IncidentStatus.
var (
	IncidentStatus_name = map[int32]string{
		0: "INCIDENT_STATUS_UNSPECIFIED",
		1: "INCIDENT_STATUS_OPENED",
		2: "INCIDENT_STATUS_STUDIED",
		3: "INCIDENT_STATUS_CAN_BE_CLOSED",
		4: "INCIDENT_STATUS_CLOSED",
	}
	IncidentStatus_value = map[string]int32{
		"INCIDENT_STATUS_UNSPECIFIED":   0,
		"INCIDENT_STATUS_OPENED":        1,
		"INCIDENT_STATUS_STUDIED":       2,
		"INCIDENT_STATUS_CAN_BE_CLOSED": 3,
		"INCIDENT_STATUS_CLOSED":        4,
	}
)

func (x IncidentStatus) Enum() *IncidentStatus {
	p := new(IncidentStatus)
	*p = x
	return p
}

func (x IncidentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IncidentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_incident_server_proto_enumTypes[0].Descriptor()
}

func (IncidentStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_incident_server_proto_enumTypes[0]
}

func (x IncidentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IncidentStatus.Descriptor instead.
func (IncidentStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{0}
}

type RuleStatus int32

const (
	RuleStatus_RULE_STATUS_UNSPECIFIED RuleStatus = 0
	RuleStatus_RULE_STATUS_ACTIVE      RuleStatus = 1
	RuleStatus_RULE_STATUS_INACTIVE    RuleStatus = 2
	RuleStatus_RULE_STATUS_REMOVED     RuleStatus = 3
)

// Enum value maps for RuleStatus.
var (
	RuleStatus_name = map[int32]string{
		0: "RULE_STATUS_UNSPECIFIED",
		1: "RULE_STATUS_ACTIVE",
		2: "RULE_STATUS_INACTIVE",
		3: "RULE_STATUS_REMOVED",
	}
	RuleStatus_value = map[string]int32{
		"RULE_STATUS_UNSPECIFIED": 0,
		"RULE_STATUS_ACTIVE":      1,
		"RULE_STATUS_INACTIVE":    2,
		"RULE_STATUS_REMOVED":     3,
	}
)

func (x RuleStatus) Enum() *RuleStatus {
	p := new(RuleStatus)
	*p = x
	return p
}

func (x RuleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_squzy_incident_server_proto_enumTypes[1].Descriptor()
}

func (RuleStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_squzy_incident_server_proto_enumTypes[1]
}

func (x RuleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleStatus.Descriptor instead.
func (RuleStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{1}
}

type ValidateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerType ComponentOwnerType `protobuf:"varint,1,opt,name=owner_type,json=ownerType,proto3,enum=squzy.v1.shared.ComponentOwnerType" json:"owner_type,omitempty"`
	Rule      string             `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ValidateRuleRequest) Reset() {
	*x = ValidateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuleRequest) ProtoMessage() {}

func (x *ValidateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuleRequest.ProtoReflect.Descriptor instead.
func (*ValidateRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{0}
}

func (x *ValidateRuleRequest) GetOwnerType() ComponentOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return ComponentOwnerType_COMPONENT_OWNER_TYPE_UNSPECIFIED
}

func (x *ValidateRuleRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type ValidateRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool                        `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Error   *ValidateRuleResponse_Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ValidateRuleResponse) Reset() {
	*x = ValidateRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuleResponse) ProtoMessage() {}

func (x *ValidateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuleResponse.ProtoReflect.Descriptor instead.
func (*ValidateRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateRuleResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateRuleResponse) GetError() *ValidateRuleResponse_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Incident struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    IncidentStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=squzy.v1.incident.IncidentStatus" json:"status,omitempty"`
	RuleId    string                  `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Histories []*Incident_HistoryItem `protobuf:"bytes,4,rep,name=histories,proto3" json:"histories,omitempty"`
}

func (x *Incident) Reset() {
	*x = Incident{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Incident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Incident) ProtoMessage() {}

func (x *Incident) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Incident.ProtoReflect.Descriptor instead.
func (*Incident) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{2}
}

func (x *Incident) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Incident) GetStatus() IncidentStatus {
	if x != nil {
		return x.Status
	}
	return IncidentStatus_INCIDENT_STATUS_UNSPECIFIED
}

func (x *Incident) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *Incident) GetHistories() []*Incident_HistoryItem {
	if x != nil {
		return x.Histories
	}
	return nil
}

type IncidentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncidentId string `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
}

func (x *IncidentIdRequest) Reset() {
	*x = IncidentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncidentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncidentIdRequest) ProtoMessage() {}

func (x *IncidentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncidentIdRequest.ProtoReflect.Descriptor instead.
func (*IncidentIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{3}
}

func (x *IncidentIdRequest) GetIncidentId() string {
	if x != nil {
		return x.IncidentId
	}
	return ""
}

type StorageRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Record:
	//	*StorageRecord_AgentMetric
	//	*StorageRecord_Transaction
	//	*StorageRecord_Snapshot
	Record isStorageRecord_Record `protobuf_oneof:"record"`
}

func (x *StorageRecord) Reset() {
	*x = StorageRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRecord) ProtoMessage() {}

func (x *StorageRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRecord.ProtoReflect.Descriptor instead.
func (*StorageRecord) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{4}
}

func (m *StorageRecord) GetRecord() isStorageRecord_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (x *StorageRecord) GetAgentMetric() *Metric {
	if x, ok := x.GetRecord().(*StorageRecord_AgentMetric); ok {
		return x.AgentMetric
	}
	return nil
}

func (x *StorageRecord) GetTransaction() *TransactionInfo {
	if x, ok := x.GetRecord().(*StorageRecord_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *StorageRecord) GetSnapshot() *SchedulerSnapshotWithId {
	if x, ok := x.GetRecord().(*StorageRecord_Snapshot); ok {
		return x.Snapshot
	}
	return nil
}

type isStorageRecord_Record interface {
	isStorageRecord_Record()
}

type StorageRecord_AgentMetric struct {
	AgentMetric *Metric `protobuf:"bytes,1,opt,name=agent_metric,json=agentMetric,proto3,oneof"`
}

type StorageRecord_Transaction struct {
	Transaction *TransactionInfo `protobuf:"bytes,2,opt,name=transaction,proto3,oneof"`
}

type StorageRecord_Snapshot struct {
	Snapshot *SchedulerSnapshotWithId `protobuf:"bytes,3,opt,name=snapshot,proto3,oneof"`
}

func (*StorageRecord_AgentMetric) isStorageRecord_Record() {}

func (*StorageRecord_Transaction) isStorageRecord_Record() {}

func (*StorageRecord_Snapshot) isStorageRecord_Record() {}

type RuleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleId string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *RuleIdRequest) Reset() {
	*x = RuleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleIdRequest) ProtoMessage() {}

func (x *RuleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleIdRequest.ProtoReflect.Descriptor instead.
func (*RuleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{5}
}

func (x *RuleIdRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule         string             `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AutoClose    bool               `protobuf:"varint,3,opt,name=auto_close,json=autoClose,proto3" json:"auto_close,omitempty"`
	OwnerType    ComponentOwnerType `protobuf:"varint,4,opt,name=owner_type,json=ownerType,proto3,enum=squzy.v1.shared.ComponentOwnerType" json:"owner_type,omitempty"`
	OwnerId      string             `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Notification bool               `protobuf:"varint,6,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRuleRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *CreateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRuleRequest) GetAutoClose() bool {
	if x != nil {
		return x.AutoClose
	}
	return false
}

func (x *CreateRuleRequest) GetOwnerType() ComponentOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return ComponentOwnerType_COMPONENT_OWNER_TYPE_UNSPECIFIED
}

func (x *CreateRuleRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateRuleRequest) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

type GetRulesByOwnerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerType ComponentOwnerType `protobuf:"varint,1,opt,name=owner_type,json=ownerType,proto3,enum=squzy.v1.shared.ComponentOwnerType" json:"owner_type,omitempty"`
	OwnerId   string             `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *GetRulesByOwnerIdRequest) Reset() {
	*x = GetRulesByOwnerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRulesByOwnerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRulesByOwnerIdRequest) ProtoMessage() {}

func (x *GetRulesByOwnerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRulesByOwnerIdRequest.ProtoReflect.Descriptor instead.
func (*GetRulesByOwnerIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetRulesByOwnerIdRequest) GetOwnerType() ComponentOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return ComponentOwnerType_COMPONENT_OWNER_TYPE_UNSPECIFIED
}

func (x *GetRulesByOwnerIdRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rule         string             `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	Name         string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AutoClose    bool               `protobuf:"varint,4,opt,name=auto_close,json=autoClose,proto3" json:"auto_close,omitempty"`
	OwnerType    ComponentOwnerType `protobuf:"varint,5,opt,name=owner_type,json=ownerType,proto3,enum=squzy.v1.shared.ComponentOwnerType" json:"owner_type,omitempty"`
	OwnerId      string             `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Status       RuleStatus         `protobuf:"varint,7,opt,name=status,proto3,enum=squzy.v1.incident.RuleStatus" json:"status,omitempty"`
	Notification bool               `protobuf:"varint,8,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{8}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetAutoClose() bool {
	if x != nil {
		return x.AutoClose
	}
	return false
}

func (x *Rule) GetOwnerType() ComponentOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return ComponentOwnerType_COMPONENT_OWNER_TYPE_UNSPECIFIED
}

func (x *Rule) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Rule) GetStatus() RuleStatus {
	if x != nil {
		return x.Status
	}
	return RuleStatus_RULE_STATUS_UNSPECIFIED
}

func (x *Rule) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

type Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Rules) Reset() {
	*x = Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rules) ProtoMessage() {}

func (x *Rules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rules.ProtoReflect.Descriptor instead.
func (*Rules) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{9}
}

func (x *Rules) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ValidateRuleResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidateRuleResponse_Error) Reset() {
	*x = ValidateRuleResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRuleResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuleResponse_Error) ProtoMessage() {}

func (x *ValidateRuleResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuleResponse_Error.ProtoReflect.Descriptor instead.
func (*ValidateRuleResponse_Error) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ValidateRuleResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Incident_HistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    IncidentStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=squzy.v1.incident.IncidentStatus" json:"status,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Incident_HistoryItem) Reset() {
	*x = Incident_HistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Incident_HistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Incident_HistoryItem) ProtoMessage() {}

func (x *Incident_HistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_squzy_incident_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Incident_HistoryItem.ProtoReflect.Descriptor instead.
func (*Incident_HistoryItem) Descriptor() ([]byte, []int) {
	return file_proto_v1_squzy_incident_server_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Incident_HistoryItem) GetStatus() IncidentStatus {
	if x != nil {
		return x.Status
	}
	return IncidentStatus_INCIDENT_STATUS_UNSPECIFIED
}

func (x *Incident_HistoryItem) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_proto_v1_squzy_incident_server_proto protoreflect.FileDescriptor

var file_proto_v1_squzy_incident_server_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6d, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x71, 0x75,
	0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x99,
	0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x08, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x34, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xec, 0x01,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x48, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x28, 0x0a, 0x0d,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x97, 0x02, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x05, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x2a, 0xa9, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x43, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x49, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x2a,
	0x74, 0x0a, 0x0a, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x17, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x55,
	0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x44, 0x10, 0x03, 0x32, 0xc3, 0x06, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x71,
	0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x0d, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x49, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x20, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x73,
	0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x24, 0x5a, 0x22, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x71, 0x75, 0x7a, 0x79, 0x2f,
	0x73, 0x71, 0x75, 0x7a, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_squzy_incident_server_proto_rawDescOnce sync.Once
	file_proto_v1_squzy_incident_server_proto_rawDescData = file_proto_v1_squzy_incident_server_proto_rawDesc
)

func file_proto_v1_squzy_incident_server_proto_rawDescGZIP() []byte {
	file_proto_v1_squzy_incident_server_proto_rawDescOnce.Do(func() {
		file_proto_v1_squzy_incident_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_squzy_incident_server_proto_rawDescData)
	})
	return file_proto_v1_squzy_incident_server_proto_rawDescData
}

var file_proto_v1_squzy_incident_server_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_v1_squzy_incident_server_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_v1_squzy_incident_server_proto_goTypes = []interface{}{
	(IncidentStatus)(0),                // 0: squzy.v1.incident.IncidentStatus
	(RuleStatus)(0),                    // 1: squzy.v1.incident.RuleStatus
	(*ValidateRuleRequest)(nil),        // 2: squzy.v1.incident.ValidateRuleRequest
	(*ValidateRuleResponse)(nil),       // 3: squzy.v1.incident.ValidateRuleResponse
	(*Incident)(nil),                   // 4: squzy.v1.incident.Incident
	(*IncidentIdRequest)(nil),          // 5: squzy.v1.incident.IncidentIdRequest
	(*StorageRecord)(nil),              // 6: squzy.v1.incident.StorageRecord
	(*RuleIdRequest)(nil),              // 7: squzy.v1.incident.RuleIdRequest
	(*CreateRuleRequest)(nil),          // 8: squzy.v1.incident.CreateRuleRequest
	(*GetRulesByOwnerIdRequest)(nil),   // 9: squzy.v1.incident.GetRulesByOwnerIdRequest
	(*Rule)(nil),                       // 10: squzy.v1.incident.Rule
	(*Rules)(nil),                      // 11: squzy.v1.incident.Rules
	(*ValidateRuleResponse_Error)(nil), // 12: squzy.v1.incident.ValidateRuleResponse.Error
	(*Incident_HistoryItem)(nil),       // 13: squzy.v1.incident.Incident.HistoryItem
	(ComponentOwnerType)(0),            // 14: squzy.v1.shared.ComponentOwnerType
	(*Metric)(nil),                     // 15: squzy.v1.agent.Metric
	(*TransactionInfo)(nil),            // 16: squzy.v1.monitoring.TransactionInfo
	(*SchedulerSnapshotWithId)(nil),    // 17: squzy.v1.monitoring.SchedulerSnapshotWithId
	(*timestamppb.Timestamp)(nil),      // 18: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 19: google.protobuf.Empty
}
var file_proto_v1_squzy_incident_server_proto_depIdxs = []int32{
	14, // 0: squzy.v1.incident.ValidateRuleRequest.owner_type:type_name -> squzy.v1.shared.ComponentOwnerType
	12, // 1: squzy.v1.incident.ValidateRuleResponse.error:type_name -> squzy.v1.incident.ValidateRuleResponse.Error
	0,  // 2: squzy.v1.incident.Incident.status:type_name -> squzy.v1.incident.IncidentStatus
	13, // 3: squzy.v1.incident.Incident.histories:type_name -> squzy.v1.incident.Incident.HistoryItem
	15, // 4: squzy.v1.incident.StorageRecord.agent_metric:type_name -> squzy.v1.agent.Metric
	16, // 5: squzy.v1.incident.StorageRecord.transaction:type_name -> squzy.v1.monitoring.TransactionInfo
	17, // 6: squzy.v1.incident.StorageRecord.snapshot:type_name -> squzy.v1.monitoring.SchedulerSnapshotWithId
	14, // 7: squzy.v1.incident.CreateRuleRequest.owner_type:type_name -> squzy.v1.shared.ComponentOwnerType
	14, // 8: squzy.v1.incident.GetRulesByOwnerIdRequest.owner_type:type_name -> squzy.v1.shared.ComponentOwnerType
	14, // 9: squzy.v1.incident.Rule.owner_type:type_name -> squzy.v1.shared.ComponentOwnerType
	1,  // 10: squzy.v1.incident.Rule.status:type_name -> squzy.v1.incident.RuleStatus
	10, // 11: squzy.v1.incident.Rules.rules:type_name -> squzy.v1.incident.Rule
	0,  // 12: squzy.v1.incident.Incident.HistoryItem.status:type_name -> squzy.v1.incident.IncidentStatus
	18, // 13: squzy.v1.incident.Incident.HistoryItem.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 14: squzy.v1.incident.IncidentServer.CreateRule:input_type -> squzy.v1.incident.CreateRuleRequest
	7,  // 15: squzy.v1.incident.IncidentServer.GetRuleById:input_type -> squzy.v1.incident.RuleIdRequest
	9,  // 16: squzy.v1.incident.IncidentServer.GetRulesByOwnerId:input_type -> squzy.v1.incident.GetRulesByOwnerIdRequest
	7,  // 17: squzy.v1.incident.IncidentServer.RemoveRule:input_type -> squzy.v1.incident.RuleIdRequest
	2,  // 18: squzy.v1.incident.IncidentServer.ValidateRule:input_type -> squzy.v1.incident.ValidateRuleRequest
	6,  // 19: squzy.v1.incident.IncidentServer.ProcessRecordFromStorage:input_type -> squzy.v1.incident.StorageRecord
	5,  // 20: squzy.v1.incident.IncidentServer.CloseIncident:input_type -> squzy.v1.incident.IncidentIdRequest
	7,  // 21: squzy.v1.incident.IncidentServer.ActivateRule:input_type -> squzy.v1.incident.RuleIdRequest
	7,  // 22: squzy.v1.incident.IncidentServer.DeactivateRule:input_type -> squzy.v1.incident.RuleIdRequest
	5,  // 23: squzy.v1.incident.IncidentServer.StudyIncident:input_type -> squzy.v1.incident.IncidentIdRequest
	10, // 24: squzy.v1.incident.IncidentServer.CreateRule:output_type -> squzy.v1.incident.Rule
	10, // 25: squzy.v1.incident.IncidentServer.GetRuleById:output_type -> squzy.v1.incident.Rule
	11, // 26: squzy.v1.incident.IncidentServer.GetRulesByOwnerId:output_type -> squzy.v1.incident.Rules
	10, // 27: squzy.v1.incident.IncidentServer.RemoveRule:output_type -> squzy.v1.incident.Rule
	3,  // 28: squzy.v1.incident.IncidentServer.ValidateRule:output_type -> squzy.v1.incident.ValidateRuleResponse
	19, // 29: squzy.v1.incident.IncidentServer.ProcessRecordFromStorage:output_type -> google.protobuf.Empty
	4,  // 30: squzy.v1.incident.IncidentServer.CloseIncident:output_type -> squzy.v1.incident.Incident
	10, // 31: squzy.v1.incident.IncidentServer.ActivateRule:output_type -> squzy.v1.incident.Rule
	10, // 32: squzy.v1.incident.IncidentServer.DeactivateRule:output_type -> squzy.v1.incident.Rule
	4,  // 33: squzy.v1.incident.IncidentServer.StudyIncident:output_type -> squzy.v1.incident.Incident
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_v1_squzy_incident_server_proto_init() }
func file_proto_v1_squzy_incident_server_proto_init() {
	if File_proto_v1_squzy_incident_server_proto != nil {
		return
	}
	file_proto_v1_shared_proto_init()
	file_proto_v1_squzy_agent_server_proto_init()
	file_proto_v1_squzy_application_monitoring_proto_init()
	file_proto_v1_squzy_monitoring_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_squzy_incident_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Incident); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncidentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRulesByOwnerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRuleResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_squzy_incident_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Incident_HistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_v1_squzy_incident_server_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StorageRecord_AgentMetric)(nil),
		(*StorageRecord_Transaction)(nil),
		(*StorageRecord_Snapshot)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_squzy_incident_server_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_squzy_incident_server_proto_goTypes,
		DependencyIndexes: file_proto_v1_squzy_incident_server_proto_depIdxs,
		EnumInfos:         file_proto_v1_squzy_incident_server_proto_enumTypes,
		MessageInfos:      file_proto_v1_squzy_incident_server_proto_msgTypes,
	}.Build()
	File_proto_v1_squzy_incident_server_proto = out.File
	file_proto_v1_squzy_incident_server_proto_rawDesc = nil
	file_proto_v1_squzy_incident_server_proto_goTypes = nil
	file_proto_v1_squzy_incident_server_proto_depIdxs = nil
}
