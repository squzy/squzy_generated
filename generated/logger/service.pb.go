// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logger/service.proto

package squzy_logger_v1_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_Tcp     ErrorCode = 0
	ErrorCode_Grpc    ErrorCode = 1
	ErrorCode_Http    ErrorCode = 2
	ErrorCode_SiteMap ErrorCode = 3
)

var ErrorCode_name = map[int32]string{
	0: "Tcp",
	1: "Grpc",
	2: "Http",
	3: "SiteMap",
}

var ErrorCode_value = map[string]int32{
	"Tcp":     0,
	"Grpc":    1,
	"Http":    2,
	"SiteMap": 3,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{0}
}

type ErrorMsg struct {
	Code                 ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=squzy.logger.v1.service.ErrorCode" json:"code,omitempty"`
	Msg                  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Meta                 *MetaData `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ErrorMsg) Reset()         { *m = ErrorMsg{} }
func (m *ErrorMsg) String() string { return proto.CompactTextString(m) }
func (*ErrorMsg) ProtoMessage()    {}
func (*ErrorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{0}
}

func (m *ErrorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMsg.Unmarshal(m, b)
}
func (m *ErrorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMsg.Marshal(b, m, deterministic)
}
func (m *ErrorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMsg.Merge(m, src)
}
func (m *ErrorMsg) XXX_Size() int {
	return xxx_messageInfo_ErrorMsg.Size(m)
}
func (m *ErrorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMsg proto.InternalMessageInfo

func (m *ErrorMsg) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_Tcp
}

func (m *ErrorMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ErrorMsg) GetMeta() *MetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

type InfoMsg struct {
	Meta                 *MetaData `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InfoMsg) Reset()         { *m = InfoMsg{} }
func (m *InfoMsg) String() string { return proto.CompactTextString(m) }
func (*InfoMsg) ProtoMessage()    {}
func (*InfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{1}
}

func (m *InfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoMsg.Unmarshal(m, b)
}
func (m *InfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoMsg.Marshal(b, m, deterministic)
}
func (m *InfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoMsg.Merge(m, src)
}
func (m *InfoMsg) XXX_Size() int {
	return xxx_messageInfo_InfoMsg.Size(m)
}
func (m *InfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_InfoMsg proto.InternalMessageInfo

func (m *InfoMsg) GetMeta() *MetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

type MetaData struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             string               `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Port                 int32                `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetaData) Reset()         { *m = MetaData{} }
func (m *MetaData) String() string { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()    {}
func (*MetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{2}
}

func (m *MetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaData.Unmarshal(m, b)
}
func (m *MetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaData.Marshal(b, m, deterministic)
}
func (m *MetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaData.Merge(m, src)
}
func (m *MetaData) XXX_Size() int {
	return xxx_messageInfo_MetaData.Size(m)
}
func (m *MetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaData.DiscardUnknown(m)
}

var xxx_messageInfo_MetaData proto.InternalMessageInfo

func (m *MetaData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetaData) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MetaData) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *MetaData) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type SendLogMessageRequest struct {
	// Types that are valid to be assigned to Msg:
	//	*SendLogMessageRequest_Info
	//	*SendLogMessageRequest_Error
	Msg                  isSendLogMessageRequest_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SendLogMessageRequest) Reset()         { *m = SendLogMessageRequest{} }
func (m *SendLogMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendLogMessageRequest) ProtoMessage()    {}
func (*SendLogMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{3}
}

func (m *SendLogMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLogMessageRequest.Unmarshal(m, b)
}
func (m *SendLogMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLogMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendLogMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLogMessageRequest.Merge(m, src)
}
func (m *SendLogMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendLogMessageRequest.Size(m)
}
func (m *SendLogMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLogMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendLogMessageRequest proto.InternalMessageInfo

type isSendLogMessageRequest_Msg interface {
	isSendLogMessageRequest_Msg()
}

type SendLogMessageRequest_Info struct {
	Info *InfoMsg `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type SendLogMessageRequest_Error struct {
	Error *ErrorMsg `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendLogMessageRequest_Info) isSendLogMessageRequest_Msg() {}

func (*SendLogMessageRequest_Error) isSendLogMessageRequest_Msg() {}

func (m *SendLogMessageRequest) GetMsg() isSendLogMessageRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *SendLogMessageRequest) GetInfo() *InfoMsg {
	if x, ok := m.GetMsg().(*SendLogMessageRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (m *SendLogMessageRequest) GetError() *ErrorMsg {
	if x, ok := m.GetMsg().(*SendLogMessageRequest_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SendLogMessageRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SendLogMessageRequest_Info)(nil),
		(*SendLogMessageRequest_Error)(nil),
	}
}

type SendLogMessageResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendLogMessageResponse) Reset()         { *m = SendLogMessageResponse{} }
func (m *SendLogMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendLogMessageResponse) ProtoMessage()    {}
func (*SendLogMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c9dc982bf39224e, []int{4}
}

func (m *SendLogMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendLogMessageResponse.Unmarshal(m, b)
}
func (m *SendLogMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendLogMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendLogMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendLogMessageResponse.Merge(m, src)
}
func (m *SendLogMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendLogMessageResponse.Size(m)
}
func (m *SendLogMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendLogMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendLogMessageResponse proto.InternalMessageInfo

func (m *SendLogMessageResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("squzy.logger.v1.service.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*ErrorMsg)(nil), "squzy.logger.v1.service.ErrorMsg")
	proto.RegisterType((*InfoMsg)(nil), "squzy.logger.v1.service.InfoMsg")
	proto.RegisterType((*MetaData)(nil), "squzy.logger.v1.service.MetaData")
	proto.RegisterType((*SendLogMessageRequest)(nil), "squzy.logger.v1.service.SendLogMessageRequest")
	proto.RegisterType((*SendLogMessageResponse)(nil), "squzy.logger.v1.service.SendLogMessageResponse")
}

func init() { proto.RegisterFile("logger/service.proto", fileDescriptor_9c9dc982bf39224e) }

var fileDescriptor_9c9dc982bf39224e = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x9b, 0x34, 0xdd, 0xa6, 0x53, 0xa9, 0x8a, 0x46, 0xfc, 0x89, 0x7a, 0xa1, 0xe4, 0x54,
	0x71, 0x70, 0x45, 0xd0, 0x22, 0x71, 0x43, 0xfc, 0x11, 0x45, 0xda, 0x5c, 0xbc, 0xfb, 0x02, 0xde,
	0x64, 0x6a, 0x45, 0x6a, 0x63, 0xd7, 0x76, 0x57, 0x62, 0x79, 0x04, 0x4e, 0xbc, 0x31, 0x8a, 0xd3,
	0xac, 0x00, 0x11, 0x01, 0xb7, 0x71, 0xe6, 0x9b, 0xc9, 0x37, 0xbf, 0x0f, 0x1e, 0xed, 0x95, 0x94,
	0x64, 0x36, 0x96, 0xcc, 0x5d, 0x5d, 0x12, 0xd3, 0x46, 0x39, 0x85, 0x4f, 0xed, 0xf1, 0x74, 0xff,
	0x85, 0x75, 0x3d, 0x76, 0xf7, 0x92, 0x9d, 0xdb, 0xcb, 0x67, 0x52, 0x29, 0xb9, 0xa7, 0x8d, 0x97,
	0xdd, 0x9e, 0x76, 0x1b, 0x57, 0x1f, 0xc8, 0x3a, 0x71, 0xd0, 0xdd, 0x64, 0xf6, 0x2d, 0x80, 0xf8,
	0xa3, 0x31, 0xca, 0x14, 0x56, 0xe2, 0x6b, 0x88, 0x4a, 0x55, 0x51, 0x1a, 0xac, 0x82, 0xf5, 0x22,
	0xcf, 0xd8, 0xc0, 0x56, 0xe6, 0x07, 0xde, 0xab, 0x8a, 0xb8, 0xd7, 0x63, 0x02, 0xe3, 0x83, 0x95,
	0x69, 0xb8, 0x0a, 0xd6, 0x33, 0xde, 0x96, 0x78, 0x09, 0xd1, 0x81, 0x9c, 0x48, 0xc7, 0xab, 0x60,
	0x3d, 0xcf, 0x9f, 0x0f, 0x6e, 0x2a, 0xc8, 0x89, 0x0f, 0xc2, 0x09, 0xee, 0xe5, 0xd9, 0x5b, 0x98,
	0x7e, 0x6e, 0x76, 0xaa, 0xf8, 0x69, 0x43, 0xf8, 0x7f, 0x1b, 0xee, 0x21, 0xee, 0xbf, 0xe0, 0x02,
	0xc2, 0xba, 0xf2, 0xc7, 0xcc, 0x78, 0x58, 0x57, 0xb8, 0x84, 0x78, 0xaf, 0x4a, 0xe1, 0x6a, 0xd5,
	0x9c, 0xbd, 0x3e, 0xbc, 0x11, 0x21, 0xd2, 0xca, 0x38, 0x6f, 0x78, 0xc2, 0x7d, 0x8d, 0x0c, 0xa2,
	0x16, 0x57, 0x1a, 0x79, 0x0b, 0x4b, 0xd6, 0xb1, 0x64, 0x3d, 0x4b, 0x76, 0xd3, 0xb3, 0xe4, 0x5e,
	0x97, 0x7d, 0x0f, 0xe0, 0xf1, 0x35, 0x35, 0xd5, 0x95, 0x92, 0x05, 0x59, 0x2b, 0x24, 0x71, 0x3a,
	0x9e, 0xc8, 0xba, 0x16, 0x6c, 0xdd, 0xec, 0x94, 0xf7, 0x32, 0xcf, 0x57, 0x83, 0xc7, 0x9c, 0x8f,
	0xdf, 0x8e, 0xb8, 0xd7, 0xe3, 0x1b, 0x98, 0x50, 0xcb, 0xfa, 0xaf, 0x14, 0xfa, 0x08, 0xb7, 0x23,
	0xde, 0x4d, 0xbc, 0x9b, 0xf8, 0x4c, 0xb2, 0x1c, 0x9e, 0xfc, 0x6e, 0xc9, 0x6a, 0xd5, 0x58, 0xc2,
	0x14, 0xa6, 0xf6, 0x54, 0x96, 0x64, 0xad, 0xb7, 0x15, 0xf3, 0xfe, 0xf9, 0xe2, 0x12, 0x66, 0x0f,
	0x09, 0xe3, 0x14, 0xc6, 0x37, 0xa5, 0x4e, 0x46, 0x18, 0x43, 0xf4, 0xc9, 0xe8, 0x32, 0x09, 0xda,
	0x6a, 0xeb, 0x9c, 0x4e, 0x42, 0x9c, 0xc3, 0xf4, 0xba, 0x76, 0x54, 0x08, 0x9d, 0x8c, 0xf3, 0xaf,
	0x70, 0x71, 0xe5, 0x8d, 0xe1, 0x11, 0x16, 0xbf, 0xfe, 0x14, 0xd9, 0xa0, 0xf3, 0x3f, 0x02, 0x5b,
	0x6e, 0xfe, 0x59, 0xdf, 0x5d, 0x73, 0x7b, 0xe1, 0x53, 0x79, 0xf5, 0x23, 0x00, 0x00, 0xff, 0xff,
	0x09, 0x34, 0x5f, 0xc0, 0x20, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoggerClient is the client API for Logger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerClient interface {
	SendLogMessage(ctx context.Context, in *SendLogMessageRequest, opts ...grpc.CallOption) (*SendLogMessageResponse, error)
}

type loggerClient struct {
	cc *grpc.ClientConn
}

func NewLoggerClient(cc *grpc.ClientConn) LoggerClient {
	return &loggerClient{cc}
}

func (c *loggerClient) SendLogMessage(ctx context.Context, in *SendLogMessageRequest, opts ...grpc.CallOption) (*SendLogMessageResponse, error) {
	out := new(SendLogMessageResponse)
	err := c.cc.Invoke(ctx, "/squzy.logger.v1.service.Logger/SendLogMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggerServer is the server API for Logger service.
type LoggerServer interface {
	SendLogMessage(context.Context, *SendLogMessageRequest) (*SendLogMessageResponse, error)
}

// UnimplementedLoggerServer can be embedded to have forward compatible implementations.
type UnimplementedLoggerServer struct {
}

func (*UnimplementedLoggerServer) SendLogMessage(ctx context.Context, req *SendLogMessageRequest) (*SendLogMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLogMessage not implemented")
}

func RegisterLoggerServer(s *grpc.Server, srv LoggerServer) {
	s.RegisterService(&_Logger_serviceDesc, srv)
}

func _Logger_SendLogMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendLogMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).SendLogMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/squzy.logger.v1.service.Logger/SendLogMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).SendLogMessage(ctx, req.(*SendLogMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "squzy.logger.v1.service.Logger",
	HandlerType: (*LoggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendLogMessage",
			Handler:    _Logger_SendLogMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logger/service.proto",
}
